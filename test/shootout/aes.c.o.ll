; ModuleID = 'aes.c.o'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-apple-darwin10.0.0"

@Te0 = constant [256 x i32] [i32 -966564955, i32 -126059388, i32 -294160487, i32 -159679603, i32 -855539, i32 -697603139, i32 -563122255, i32 -1849309868, i32 1613770832, i32 33620227, i32 -832084055, i32 1445669757, i32 -402719207, i32 -1244145822, i32 1303096294, i32 -327780710, i32 -1882535355, i32 528646813, i32 -1983264448, i32 -92439161, i32 -268764651, i32 -1302767125, i32 -1907931191, i32 -68095989, i32 1101901292, i32 -1277897625, i32 1604494077, i32 1169141738, i32 597466303, i32 1403299063, i32 -462261610, i32 -1681866661, i32 1974974402, i32 -503448292, i32 1033081774, i32 1277568618, i32 1815492186, i32 2118074177, i32 -168298750, i32 -2083730353, i32 1748251740, i32 1369810420, i32 -773462732, i32 -101584632, i32 -495881837, i32 -1411852173, i32 1647391059, i32 706024767, i32 134480908, i32 -1782069422, i32 1176707941, i32 -1648114850, i32 806885416, i32 932615841, i32 168101135, i32 798661301, i32 235341577, i32 605164086, i32 461406363, i32 -538779075, i32 -840176858, i32 1311188841, i32 2142417613, i32 -361400929, i32 302582043, i32 495158174, i32 1479289972, i32 874125870, i32 907746093, i32 -596742478, i32 -1269146898, i32 1537253627, i32 -1538108682, i32 1983593293, i32 -1210657183, i32 2108928974, i32 1378429307, i32 -572267714, i32 1580150641, i32 327451799, i32 -1504488459, i32 -1177431704, i32 0, i32 -1041371860, i32 1075847264, i32 -469959649, i32 2041688520, i32 -1235526675, i32 -731223362, i32 -1916023994, i32 1740553945, i32 1916352843, i32 -1807070498, i32 -1739830060, i32 -1336387352, i32 -2049978550, i32 -1143943061, i32 -974131414, i32 1336584933, i32 -302253290, i32 -2042412091, i32 -1706209833, i32 1714631509, i32 293963156, i32 -1975171633, i32 -369493744, i32 67240454, i32 -25198719, i32 -1605349136, i32 2017213508, i32 631218106, i32 1269344483, i32 -1571728909, i32 1571005438, i32 -2143272768, i32 93294474, i32 1066570413, i32 563977660, i32 1882732616, i32 -235539196, i32 1673313503, i32 2008463041, i32 -1344611723, i32 1109467491, i32 537923632, i32 -436207846, i32 -34344178, i32 -1076702611, i32 -2117218996, i32 403442708, i32 638784309, i32 -1007883217, i32 -1101045791, i32 899127202, i32 -2008791860, i32 773265209, i32 -1815821225, i32 1437050866, i32 -58818942, i32 2050833735, i32 -932944724, i32 -1168286233, i32 840505643, i32 -428641387, i32 -1067425632, i32 427917720, i32 -1638969391, i32 -1545806721, i32 1143087718, i32 1412049534, i32 999329963, i32 193497219, i32 -1941551414, i32 -940642775, i32 1807268051, i32 672404540, i32 -1478566279, i32 -1134666014, i32 369822493, i32 -1378100362, i32 -606019525, i32 1681011286, i32 1949973070, i32 336202270, i32 -1840690725, i32 201721354, i32 1210328172, i32 -1201906460, i32 -1614626211, i32 -1110191250, i32 1135389935, i32 -1000185178, i32 965841320, i32 831886756, i32 -739974089, i32 -226920053, i32 -706222286, i32 -1949775805, i32 1849112409, i32 -630362697, i32 26054028, i32 -1311386268, i32 -1672589614, i32 1235855840, i32 -663982924, i32 -1403627782, i32 -202050553, i32 -806688219, i32 -899324497, i32 -193299826, i32 1202630377, i32 268961816, i32 1874508501, i32 -260540280, i32 1243948399, i32 1546530418, i32 941366308, i32 1470539505, i32 1941222599, i32 -1748580783, i32 -873928669, i32 -1579295364, i32 -395021156, i32 1042226977, i32 -1773450275, i32 1639824860, i32 227249030, i32 260737669, i32 -529502064, i32 2084453954, i32 1907733956, i32 -865704278, i32 -1874310952, i32 100860677, i32 -134810111, i32 470683154, i32 -1033805405, i32 1781871967, i32 -1370007559, i32 1773779408, i32 394692241, i32 -1715355304, i32 974986535, i32 664706745, i32 -639508168, i32 -336005101, i32 731420851, i32 571543859, i32 -764843589, i32 -1445340816, i32 126783113, i32 865375399, i32 765172662, i32 1008606754, i32 361203602, i32 -907417312, i32 -2016489911, i32 -1437248001, i32 1344809080, i32 -1512054918, i32 59542671, i32 1503764984, i32 160008576, i32 437062935, i32 1707065306, i32 -672733647, i32 -2076032314, i32 -798463816, i32 -2109652541, i32 697932208, i32 1512910199, i32 504303377, i32 2075177163, i32 -1470868228, i32 1841019862, i32 739644986], align 16
@Te1 = constant [256 x i32] [i32 -1513725085, i32 -2064089988, i32 -1712425097, i32 -1913226373, i32 234877682, i32 -1110021269, i32 -1310822545, i32 1418839493, i32 1348481072, i32 50462977, i32 -1446090905, i32 2102799147, i32 434634494, i32 1656084439, i32 -431117397, i32 -1695779210, i32 1167051466, i32 -1658879358, i32 1082771913, i32 -2013627011, i32 368048890, i32 -340633255, i32 -913422521, i32 201060592, i32 -331240019, i32 1739838676, i32 -44064094, i32 -364531793, i32 -1088185188, i32 -145513308, i32 -1763413390, i32 1536934080, i32 -1032472649, i32 484572669, i32 -1371696237, i32 1783375398, i32 1517041206, i32 1098792767, i32 49674231, i32 1334037708, i32 1550332980, i32 -195975771, i32 886171109, i32 150598129, i32 -1813876367, i32 1940642008, i32 1398944049, i32 1059722517, i32 201851908, i32 1385547719, i32 1699095331, i32 1587397571, i32 674240536, i32 -1590192490, i32 252314885, i32 -1255171430, i32 151914247, i32 908333586, i32 -1692696448, i32 1038082786, i32 651029483, i32 1766729511, i32 -847269198, i32 -1612024459, i32 454166793, i32 -1642232957, i32 1951935532, i32 775166490, i32 758520603, i32 -1294176658, i32 -290170278, i32 -77881184, i32 -157003182, i32 1299594043, i32 1639438038, i32 -830622797, i32 2068982057, i32 1054729187, i32 1901997871, i32 -1760328572, i32 -173649069, i32 1757008337, i32 0, i32 750906861, i32 1614815264, i32 535035132, i32 -931548751, i32 -306816165, i32 -1093375382, i32 1183697867, i32 -647512386, i32 1265776953, i32 -560706998, i32 -728216500, i32 -391096232, i32 1250283471, i32 1807470800, i32 717615087, i32 -447763798, i32 384695291, i32 -981056701, i32 -677753523, i32 1432761139, i32 -1810791035, i32 -813021883, i32 283769337, i32 100925954, i32 -2114027649, i32 -257929136, i32 1148730428, i32 -1171939425, i32 -481580888, i32 -207466159, i32 -27417693, i32 -1065336768, i32 -1979347057, i32 -1388342638, i32 -1138647651, i32 1215313976, i32 82966005, i32 -547111748, i32 -1049119050, i32 1974459098, i32 1665278241, i32 807407632, i32 451280895, i32 251524083, i32 1841287890, i32 1283575245, i32 337120268, i32 891687699, i32 801369324, i32 -507617441, i32 -1573546089, i32 -863484860, i32 959321879, i32 1469301956, i32 -229267545, i32 -2097381762, i32 1199193405, i32 -1396153244, i32 -407216803, i32 724703513, i32 -1780059277, i32 -1598005152, i32 -1743158911, i32 -778154161, i32 2141445340, i32 1715741218, i32 2119445034, i32 -1422159728, i32 -2096396152, i32 -896776634, i32 700968686, i32 -747915080, i32 1009259540, i32 2041044702, i32 -490971554, i32 487983883, i32 1991105499, i32 1004265696, i32 1449407026, i32 1316239930, i32 504629770, i32 -611169975, i32 168560134, i32 1816667172, i32 -457679780, i32 1570751170, i32 1857934291, i32 -280777556, i32 -1497079198, i32 -1472622191, i32 -1540254315, i32 936633572, i32 -1947043463, i32 852879335, i32 1133234376, i32 1500395319, i32 -1210421907, i32 -1946055283, i32 1689376213, i32 -761508274, i32 -532043351, i32 -1260884884, i32 -89369002, i32 133428468, i32 634383082, i32 -1345690267, i32 -1896580486, i32 -381178194, i32 403703816, i32 -714097990, i32 -1997506440, i32 1867130149, i32 1918643758, i32 607656988, i32 -245913946, i32 -948718412, i32 1368901318, i32 600565992, i32 2090982877, i32 -1662487436, i32 557719327, i32 -577352885, i32 -597574211, i32 -2045932661, i32 -2062579062, i32 -1864339344, i32 1115438654, i32 -999180875, i32 -1429445018, i32 -661632952, i32 84280067, i32 33027830, i32 303828494, i32 -1547542175, i32 1600795957, i32 -106014889, i32 -798377543, i32 -1860729210, i32 1486471617, i32 658119965, i32 -1188585826, i32 953803233, i32 334231800, i32 -1288988520, i32 857870609, i32 -1143838359, i32 1890179545, i32 -1995993458, i32 -1489791852, i32 -1238525029, i32 574365214, i32 -1844082809, i32 550103529, i32 1233637070, i32 -5614251, i32 2018519080, i32 2057691103, i32 -1895592820, i32 -128343647, i32 -2146858615, i32 387583245, i32 -630865985, i32 836232934, i32 -964410814, i32 -1194301336, i32 -1014873791, i32 -1339450983, i32 2002398509, i32 287182607, i32 -881086288, i32 -56077228, i32 -697451589, i32 975967766], align 16
@Te2 = constant [256 x i32] [i32 1671808611, i32 2089089148, i32 2006576759, i32 2072901243, i32 -233963534, i32 1807603307, i32 1873927791, i32 -984313403, i32 810573872, i32 16974337, i32 1739181671, i32 729634347, i32 -31856642, i32 -681396777, i32 -1410970197, i32 1989864566, i32 -901410870, i32 -2103631998, i32 -918517303, i32 2106063485, i32 -99225606, i32 1508618841, i32 1204391495, i32 -267650064, i32 -1377025619, i32 -731401260, i32 -1560453214, i32 -1343601233, i32 -1665195108, i32 -1527295068, i32 1922491506, i32 -1067738176, i32 -1211992649, i32 -48438787, i32 -1817297517, i32 644500518, i32 911895606, i32 1061256767, i32 -150800905, i32 -867204148, i32 878471220, i32 -1510714971, i32 -449523227, i32 -251069967, i32 1905517169, i32 -663508008, i32 827548209, i32 356461077, i32 67897348, i32 -950889017, i32 593839651, i32 -1017209405, i32 405286936, i32 -1767819370, i32 84871685, i32 -1699401830, i32 118033927, i32 305538066, i32 -2137318528, i32 -499261470, i32 -349778453, i32 661212711, i32 -1295155278, i32 1973414517, i32 152769033, i32 -2086789757, i32 745822252, i32 439235610, i32 455947803, i32 1857215598, i32 1525593178, i32 -1594139744, i32 1391895634, i32 994932283, i32 -698239018, i32 -1278313037, i32 695947817, i32 -482419229, i32 795958831, i32 -2070473852, i32 1408607827, i32 -781665839, i32 0, i32 -315833875, i32 543178784, i32 -65018884, i32 -1312261711, i32 1542305371, i32 1790891114, i32 -884568629, i32 -1093048386, i32 961245753, i32 1256100938, i32 1289001036, i32 1491644504, i32 -817199665, i32 -798245936, i32 -282409489, i32 -1427812438, i32 -82383365, i32 1137018435, i32 1305975373, i32 861234739, i32 -2053893755, i32 1171229253, i32 -116332039, i32 33948674, i32 2139225727, i32 1357946960, i32 1011120188, i32 -1615190625, i32 -1461498968, i32 1374921297, i32 -1543610973, i32 1086357568, i32 -1886780017, i32 -1834139758, i32 -1648615011, i32 944271416, i32 -184225291, i32 -1126210628, i32 -1228834890, i32 -629821478, i32 560153121, i32 271589392, i32 -15014401, i32 -217121293, i32 -764559406, i32 -850624051, i32 202643468, i32 322250259, i32 -332413972, i32 1608629855, i32 -1750977129, i32 1154254916, i32 389623319, i32 -1000893500, i32 -1477290585, i32 2122513534, i32 1028094525, i32 1689045092, i32 1575467613, i32 422261273, i32 1939203699, i32 1621147744, i32 -2120738431, i32 1339137615, i32 -595614756, i32 577127458, i32 712922154, i32 -1867826288, i32 -2004677752, i32 1187679302, i32 -299251730, i32 -1194103880, i32 339486740, i32 -562452514, i32 1591917662, i32 186455563, i32 -612979237, i32 -532948000, i32 844522546, i32 978220090, i32 169743370, i32 1239126601, i32 101321734, i32 611076132, i32 1558493276, i32 -1034051646, i32 -747717165, i32 -1393605716, i32 1655096418, i32 -1851246191, i32 -1784401515, i32 -466103324, i32 2039214713, i32 -416098841, i32 -935097400, i32 928607799, i32 1840765549, i32 -1920204403, i32 -714821163, i32 1322425422, i32 -1444918871, i32 1823791212, i32 1459268694, i32 -200805388, i32 -366620694, i32 1706019429, i32 2056189050, i32 -1360443474, i32 135794696, i32 -1160417350, i32 2022240376, i32 628050469, i32 779246638, i32 472135708, i32 -1494132826, i32 -1261997132, i32 -967731258, i32 -400307224, i32 -579034659, i32 1956440180, i32 522272287, i32 1272813131, i32 -1109630531, i32 -1954148981, i32 -1970991222, i32 1888542832, i32 1044544574, i32 -1245417035, i32 1722469478, i32 1222152264, i32 50660867, i32 -167643146, i32 236067854, i32 1638122081, i32 895445557, i32 1475980887, i32 -1177523783, i32 -2037311610, i32 -1051158079, i32 489110045, i32 -1632032866, i32 -516367903, i32 -132912136, i32 -1733088360, i32 288563729, i32 1773916777, i32 -646927911, i32 -1903622258, i32 -1800981612, i32 -1682559589, i32 505560094, i32 -2020469369, i32 -383727127, i32 -834041906, i32 1442818645, i32 678973480, i32 -545610273, i32 -1936784500, i32 -1577559647, i32 -1988097655, i32 219617805, i32 -1076206145, i32 -432941082, i32 1120306242, i32 1756942440, i32 1103331905, i32 -1716508263, i32 762796589, i32 252780047, i32 -1328841808, i32 1425844308, i32 -1143575109, i32 372911126], align 16
@Te3 = constant [256 x i32] [i32 1667474886, i32 2088535288, i32 2004326894, i32 2071694838, i32 -219017729, i32 1802223062, i32 1869591006, i32 -976923503, i32 808472672, i32 16843522, i32 1734846926, i32 724270422, i32 -16901657, i32 -673750347, i32 -1414797747, i32 1987484396, i32 -892713585, i32 -2105369313, i32 -909557623, i32 2105378810, i32 -84273681, i32 1499065266, i32 1195886990, i32 -252703749, i32 -1381110719, i32 -724277325, i32 -1566376609, i32 -1347425723, i32 -1667449053, i32 -1532692653, i32 1920112356, i32 -1061135461, i32 -1212693899, i32 -33743647, i32 -1819038147, i32 640051788, i32 909531756, i32 1061110142, i32 -134806795, i32 -859025533, i32 875846760, i32 -1515850671, i32 -437963567, i32 -235861767, i32 1903268834, i32 -656903253, i32 825316194, i32 353713962, i32 67374088, i32 -943238507, i32 589522246, i32 -1010606435, i32 404236336, i32 -1768513225, i32 84217610, i32 -1701137105, i32 117901582, i32 303183396, i32 -2139055333, i32 -488489505, i32 -336910643, i32 656894286, i32 -1296904833, i32 1970642922, i32 151591698, i32 -2088526307, i32 741110872, i32 437923380, i32 454765878, i32 1852748508, i32 1515908788, i32 -1600062629, i32 1381168804, i32 993742198, i32 -690593353, i32 -1280061827, i32 690584402, i32 -471646499, i32 791638366, i32 -2071685357, i32 1398011302, i32 -774805319, i32 0, i32 -303223615, i32 538992704, i32 -50585629, i32 -1313748871, i32 1532751286, i32 1785380564, i32 -875870579, i32 -1094788761, i32 960056178, i32 1246420628, i32 1280103576, i32 1482221744, i32 -808498555, i32 -791647301, i32 -269538619, i32 -1431640753, i32 -67430675, i32 1128514950, i32 1296947098, i32 859002214, i32 -2054843375, i32 1162203018, i32 -101117719, i32 33687044, i32 2139062782, i32 1347481760, i32 1010582648, i32 -1616922075, i32 -1465326773, i32 1364325282, i32 -1549533603, i32 1077985408, i32 -1886418427, i32 -1835881153, i32 -1650607071, i32 943212656, i32 -168491791, i32 -1128472733, i32 -1229536905, i32 -623217233, i32 555836226, i32 269496352, i32 -58651, i32 -202174723, i32 -757961281, i32 -842183551, i32 202118168, i32 320025894, i32 -320065597, i32 1600119230, i32 -1751670219, i32 1145359496, i32 387397934, i32 -993765485, i32 -1482165675, i32 2122220284, i32 1027426170, i32 1684319432, i32 1566435258, i32 421079858, i32 1936954854, i32 1616945344, i32 -2122213351, i32 1330631070, i32 -589529181, i32 572679748, i32 707427924, i32 -1869567173, i32 -2004319477, i32 1179044492, i32 -286381625, i32 -1195846805, i32 336870440, i32 -555845209, i32 1583276732, i32 185277718, i32 -606374227, i32 -522175525, i32 842159716, i32 976899700, i32 168435220, i32 1229577106, i32 101059084, i32 606366792, i32 1549591736, i32 -1027449441, i32 -741118275, i32 -1397952701, i32 1650632388, i32 -1852725191, i32 -1785355215, i32 -454805549, i32 2038008818, i32 -404278571, i32 -926399605, i32 926374254, i32 1835907034, i32 -1920103423, i32 -707435343, i32 1313788572, i32 -1448484791, i32 1819063512, i32 1448540844, i32 -185333773, i32 -353753649, i32 1701162954, i32 2054852340, i32 -1364268729, i32 134748176, i32 -1162160785, i32 2021165296, i32 623210314, i32 774795868, i32 471606328, i32 -1499008681, i32 -1263220877, i32 -960081513, i32 -387439669, i32 -572687199, i32 1953799400, i32 522133822, i32 1263263126, i32 -1111630751, i32 -1953790451, i32 -1970633457, i32 1886425312, i32 1044267644, i32 -1246378895, i32 1718004428, i32 1212733584, i32 50529542, i32 -151649801, i32 235803164, i32 1633788866, i32 892690282, i32 1465383342, i32 -1179004823, i32 -2038001385, i32 -1044293479, i32 488449850, i32 -1633765081, i32 -505333543, i32 -117959701, i32 -1734823125, i32 286339874, i32 1768537042, i32 -640061271, i32 -1903261433, i32 -1802197197, i32 -1684294099, i32 505291324, i32 -2021158379, i32 -370597687, i32 -825341561, i32 1431699370, i32 673740880, i32 -539002203, i32 -1936945405, i32 -1583220647, i32 -1987477495, i32 218961690, i32 -1077945755, i32 -421121577, i32 1111672452, i32 1751693520, i32 1094828930, i32 -1717981143, i32 757954394, i32 252645662, i32 -1330590853, i32 1414855848, i32 -1145317779, i32 370555436], align 16
@Te4 = constant [256 x i32] [i32 1667457891, i32 2088533116, i32 2004318071, i32 2071690107, i32 -218959118, i32 1802201963, i32 1869573999, i32 -976894523, i32 808464432, i32 16843009, i32 1734829927, i32 724249387, i32 -16843010, i32 -673720361, i32 -1414812757, i32 1987475062, i32 -892679478, i32 -2105376126, i32 -909522487, i32 2105376125, i32 -84215046, i32 1499027801, i32 1195853639, i32 -252645136, i32 -1381126739, i32 -724249388, i32 -1566399838, i32 -1347440721, i32 -1667457892, i32 -1532713820, i32 1920103026, i32 -1061109568, i32 -1212696649, i32 -33686019, i32 -1819044973, i32 640034342, i32 909522486, i32 1061109567, i32 -134744073, i32 -858993460, i32 875836468, i32 -1515870811, i32 -437918235, i32 -235802127, i32 1903260017, i32 -656877352, i32 825307441, i32 353703189, i32 67372036, i32 -943208505, i32 589505315, i32 -1010580541, i32 404232216, i32 -1768515946, i32 84215045, i32 -1701143910, i32 117901063, i32 303174162, i32 -2139062144, i32 -488447262, i32 -336860181, i32 656877351, i32 -1296911694, i32 1970632053, i32 151587081, i32 -2088533117, i32 741092396, i32 437918234, i32 454761243, i32 1852730990, i32 1515870810, i32 -1600085856, i32 1381126738, i32 993737531, i32 -690563370, i32 -1280068685, i32 690563369, i32 -471604253, i32 791621423, i32 -2071690108, i32 1397969747, i32 -774778415, i32 0, i32 -303174163, i32 538976288, i32 -50529028, i32 -1313754703, i32 1532713819, i32 1785358954, i32 -875836469, i32 -1094795586, i32 960051513, i32 1246382666, i32 1280068684, i32 1482184792, i32 -808464433, i32 -791621424, i32 -269488145, i32 -1431655766, i32 -67372037, i32 1128481603, i32 1296911693, i32 858993459, i32 -2054847099, i32 1162167621, i32 -101058055, i32 33686018, i32 2139062143, i32 1347440720, i32 1010580540, i32 -1616928865, i32 -1465341784, i32 1364283729, i32 -1549556829, i32 1077952576, i32 -1886417009, i32 -1835887982, i32 -1650614883, i32 943208504, i32 -168430091, i32 -1128481604, i32 -1229539658, i32 -623191334, i32 555819297, i32 269488144, i32 -1, i32 -202116109, i32 -757935406, i32 -842150451, i32 202116108, i32 320017171, i32 -320017172, i32 1600085855, i32 -1751672937, i32 1145324612, i32 387389207, i32 -993737532, i32 -1482184793, i32 2122219134, i32 1027423549, i32 1684300900, i32 1566399837, i32 421075225, i32 1936946035, i32 1616928864, i32 -2122219135, i32 1330597711, i32 -589505316, i32 572662306, i32 707406378, i32 -1869574000, i32 -2004318072, i32 1179010630, i32 -286331154, i32 -1195853640, i32 336860180, i32 -555819298, i32 1583242846, i32 185273099, i32 -606348325, i32 -522133280, i32 842150450, i32 976894522, i32 168430090, i32 1229539657, i32 101058054, i32 606348324, i32 1549556828, i32 -1027423550, i32 -741092397, i32 -1397969748, i32 1650614882, i32 -1852730991, i32 -1785358955, i32 -454761244, i32 2038004089, i32 -404232217, i32 -926365496, i32 926365495, i32 1835887981, i32 -1920103027, i32 -707406379, i32 1313754702, i32 -1448498775, i32 1819044972, i32 1448498774, i32 -185273100, i32 -353703190, i32 1701143909, i32 2054847098, i32 -1364283730, i32 134744072, i32 -1162167622, i32 2021161080, i32 623191333, i32 774778414, i32 471604252, i32 -1499027802, i32 -1263225676, i32 -960051514, i32 -387389208, i32 -572662307, i32 1953789044, i32 522133279, i32 1263225675, i32 -1111638595, i32 -1953789045, i32 -1970632054, i32 1886417008, i32 1044266558, i32 -1246382667, i32 1717986918, i32 1212696648, i32 50529027, i32 -151587082, i32 235802126, i32 1633771873, i32 892679477, i32 1465341783, i32 -1179010631, i32 -2038004090, i32 -1044266559, i32 488447261, i32 -1633771874, i32 -505290271, i32 -117901064, i32 -1734829928, i32 286331153, i32 1768515945, i32 -640034343, i32 -1903260018, i32 -1802201964, i32 -1684300901, i32 505290270, i32 -2021161081, i32 -370546199, i32 -825307442, i32 1431655765, i32 673720360, i32 -538976289, i32 -1936946036, i32 -1583242847, i32 -1987475063, i32 218959117, i32 -1077952577, i32 -421075226, i32 1111638594, i32 1751672936, i32 1094795585, i32 -1717986919, i32 757935405, i32 252645135, i32 -1330597712, i32 1414812756, i32 -1145324613, i32 370546198], align 16
@Td0 = constant [256 x i32] [i32 1374988112, i32 2118214995, i32 437757123, i32 975658646, i32 1001089995, i32 530400753, i32 -1392879445, i32 1273168787, i32 540080725, i32 -1384747530, i32 -1999866223, i32 -184398811, i32 1340463100, i32 -987051049, i32 641025152, i32 -1251826801, i32 -558802359, i32 632953703, i32 1172967064, i32 1576976609, i32 -1020300030, i32 -2125664238, i32 -1924753501, i32 1809054150, i32 59727847, i32 361929877, i32 -1083344149, i32 -1789765158, i32 -725712083, i32 1484005843, i32 1239443753, i32 -1899378620, i32 1975683434, i32 -191989384, i32 -1722270101, i32 666464733, i32 -1092530250, i32 -259478249, i32 -920605594, i32 2110667444, i32 1675577880, i32 -451268222, i32 -1756286112, i32 1649639237, i32 -1318815776, i32 -1150570876, i32 -25059300, i32 -116905068, i32 1883793496, i32 -1891238631, i32 -1797362553, i32 1383856311, i32 -1418472669, i32 1917518562, i32 -484470953, i32 1716890410, i32 -1293211641, i32 800440835, i32 -2033878118, i32 -751368027, i32 807962610, i32 599762354, i32 33778362, i32 -317291940, i32 -1966138325, i32 -1485196142, i32 -217582864, i32 1315562145, i32 1708848333, i32 101039829, i32 -785096161, i32 -995688822, i32 875451293, i32 -1561111136, i32 92987698, i32 -1527321739, i32 193195065, i32 1080094634, i32 1584504582, i32 -1116860335, i32 1042385657, i32 -1763899843, i32 -583137874, i32 1306967366, i32 -1856729675, i32 1908694277, i32 67556463, i32 1615861247, i32 429456164, i32 -692196969, i32 -1992277044, i32 1742315127, i32 -1326955843, i32 126454664, i32 -417768648, i32 2043211483, i32 -1585706425, i32 2084704233, i32 -125559095, i32 0, i32 159417987, i32 841739592, i32 504459436, i32 1817866830, i32 -49348613, i32 260388950, i32 1034867998, i32 908933415, i32 168810852, i32 1750902305, i32 -1688513327, i32 607530554, i32 202008497, i32 -1822955761, i32 -1259432238, i32 463180190, i32 -2134850225, i32 1641816226, i32 1517767529, i32 470948374, i32 -493635062, i32 -1063245083, i32 1008918595, i32 303765277, i32 235474187, i32 -225720403, i32 766945465, i32 337553864, i32 1475418501, i32 -1351284916, i32 -291906117, i32 -1551933187, i32 -150919521, i32 1551037884, i32 1147550661, i32 1543208500, i32 -1958532746, i32 -886847780, i32 -1225917336, i32 -1192955549, i32 -684598070, i32 1113818384, i32 328671808, i32 -2067394272, i32 -2058738563, i32 -759480840, i32 -1359400431, i32 -953573011, i32 496906059, i32 -592301837, i32 226906860, i32 2009195472, i32 733156972, i32 -1452230247, i32 294930682, i32 1206477858, i32 -1459843900, i32 -1594867942, i32 1451044056, i32 573804783, i32 -2025238841, i32 -650587711, i32 -1932877058, i32 -1730933962, i32 -1493859889, i32 -1518674392, i32 -625504730, i32 1068351396, i32 742039012, i32 1350078989, i32 1784663195, i32 1417561698, i32 -158526526, i32 -1864845080, i32 775550814, i32 -2101104651, i32 -1621262146, i32 1775276924, i32 1876241833, i32 -819653965, i32 -928212677, i32 270040487, i32 -392404114, i32 -616842373, i32 -853116919, i32 1851332852, i32 -325404927, i32 -2091935064, i32 -426414491, i32 -1426069890, i32 566021896, i32 -283776794, i32 -1159226407, i32 1248802510, i32 -358676012, i32 699432150, i32 832877231, i32 708780849, i32 -962227152, i32 899835584, i32 1951317047, i32 -58537306, i32 -527380304, i32 866637845, i32 -251357110, i32 1106041591, i32 2144161806, i32 395441711, i32 1984812685, i32 1139781709, i32 -861254316, i32 -459930401, i32 -1630423581, i32 1282050075, i32 -1054072904, i32 1181045119, i32 -1654724092, i32 25965917, i32 -91786125, i32 -83148498, i32 -1285087910, i32 -1831087534, i32 -384805325, i32 1842759443, i32 -1697160820, i32 933301370, i32 1509430414, i32 -351060855, i32 -827774994, i32 -1218328267, i32 -518199827, i32 2051518780, i32 -1663901863, i32 1441952575, i32 404016761, i32 1942435775, i32 1408749034, i32 1610459739, i32 -549621996, i32 2017778566, i32 -894438527, i32 -1184316354, i32 941896748, i32 -1029488545, i32 371049330, i32 -1126030068, i32 675039627, i32 -15887039, i32 967311729, i32 135050206, i32 -659233636, i32 1683407248, i32 2076935265, i32 -718096784, i32 1215061108, i32 -793225406], align 16
@Td1 = constant [256 x i32] [i32 1347548327, i32 1400783205, i32 -1021700188, i32 -1774573730, i32 -885281941, i32 -249586363, i32 -1414727080, i32 -1823743229, i32 1428173050, i32 -156404115, i32 -1853305738, i32 636813900, i32 -61872681, i32 -674944309, i32 -2144979644, i32 -1883938141, i32 1239331162, i32 1730525723, i32 -1740248562, i32 -513933632, i32 46346101, i32 310463728, i32 -1551022441, i32 -966011911, i32 -419197089, i32 -1793748324, i32 -339776134, i32 -627748263, i32 768917123, i32 -749177823, i32 692707433, i32 1150208456, i32 1786102409, i32 2029293177, i32 1805211710, i32 -584599183, i32 -1229004465, i32 401639597, i32 1724457132, i32 -1266823622, i32 409198410, i32 -2098914767, i32 1620529459, i32 1164071807, i32 -525245321, i32 -2068091986, i32 486441376, i32 -1795618773, i32 1483753576, i32 428819965, i32 -2020286868, i32 -1219331080, i32 598438867, i32 -495826174, i32 1474502543, i32 711349675, i32 129166120, i32 53458370, i32 -1702443653, i32 -1512884472, i32 -231724921, i32 -1306280027, i32 -1174273174, i32 1559041666, i32 730517276, i32 -1834518092, i32 -252508174, i32 -1588696606, i32 -848962828, i32 -721025602, i32 533804130, i32 -1966823682, i32 -1657524653, i32 -1599933611, i32 839224033, i32 1973745387, i32 957055980, i32 -1438621457, i32 106852767, i32 1371368976, i32 -113368694, i32 1033297158, i32 -1361232379, i32 1179510461, i32 -1248766835, i32 91341917, i32 1862534868, i32 -10465259, i32 605657339, i32 -1747534359, i32 -863420349, i32 2003294622, i32 -1112479678, i32 -2012771957, i32 954669403, i32 -612775698, i32 1201765386, i32 -377732593, i32 -906460130, i32 0, i32 -2096529274, i32 1211247597, i32 -1407315600, i32 1315723890, i32 -67301633, i32 1443857720, i32 507358933, i32 657861945, i32 1678381017, i32 560487590, i32 -778347692, i32 975451694, i32 -1324610969, i32 261314535, i32 -759894378, i32 -1642357871, i32 1333838021, i32 -1570644960, i32 1767536459, i32 370938394, i32 182621114, i32 -440360918, i32 1128014560, i32 487725847, i32 185469197, i32 -1376613433, i32 -1188186456, i32 -938205527, i32 -2057834215, i32 1286567175, i32 -1141990947, i32 -39616672, i32 -1611202266, i32 -1134791947, i32 -985373125, i32 878443390, i32 1988838185, i32 -590666810, i32 1756818940, i32 1673061617, i32 -891866660, i32 272786309, i32 1075025698, i32 545572369, i32 2105887268, i32 -120407235, i32 296679730, i32 1841768865, i32 1260232239, i32 -203640272, i32 -334657966, i32 -797457949, i32 1814803222, i32 -1716948807, i32 -99511224, i32 575138148, i32 -995558260, i32 446754879, i32 -665420500, i32 -282971248, i32 -947435186, i32 -1042728751, i32 -24327518, i32 915985419, i32 -811141759, i32 681933534, i32 651868046, i32 -1539330625, i32 -466863459, i32 223377554, i32 -1687527476, i32 1649704518, i32 -1024029421, i32 -393160520, i32 1580087799, i32 -175979601, i32 -1096852096, i32 2087309459, i32 -1452288723, i32 -1278270190, i32 1003007129, i32 -1492117379, i32 1860738147, i32 2077965243, i32 164439672, i32 -194094824, i32 32283319, i32 -1467789414, i32 1709610350, i32 2125135846, i32 136428751, i32 -420538904, i32 -642062437, i32 -833982666, i32 -722821367, i32 -701910916, i32 -1355701070, i32 824852259, i32 818324884, i32 -1070226842, i32 930369212, i32 -1493400886, i32 -1327460144, i32 355706840, i32 1257309336, i32 -146674470, i32 243256656, i32 790073846, i32 -1921626666, i32 1296297904, i32 1422699085, i32 -538667516, i32 -476130891, i32 457992840, i32 -1195299809, i32 2135319889, i32 77422314, i32 1560382517, i32 1945798516, i32 788204353, i32 1521706781, i32 1385356242, i32 870912086, i32 325965383, i32 -1936009375, i32 2050466060, i32 -1906706412, i32 -1981082820, i32 -288446169, i32 901210569, i32 -304014107, i32 1014646705, i32 1503449823, i32 1062597235, i32 2031621326, i32 -1082931401, i32 -363595827, i32 1533017514, i32 350174575, i32 -2038938405, i32 -2117423117, i32 1052338372, i32 741876788, i32 1606591296, i32 1914052035, i32 213705253, i32 -1960297399, i32 1107234197, i32 1899603969, i32 -569897805, i32 -1663519516, i32 -1872472383, i32 1635502980, i32 1893020342, i32 1950903388, i32 1120974935], align 16
@Td2 = constant [256 x i32] [i32 -1487908364, i32 1699970625, i32 -1530717673, i32 1586903591, i32 1808481195, i32 1173430173, i32 1487645946, i32 59984867, i32 -95084496, i32 1844882806, i32 1989249228, i32 1277555970, i32 -671330331, i32 -875051734, i32 1149249077, i32 -1550863006, i32 1514790577, i32 459744698, i32 244860394, i32 -1058972162, i32 1963115311, i32 -267222708, i32 -1750889146, i32 -104436781, i32 1608975247, i32 -1667951214, i32 2062270317, i32 1507497298, i32 -2094148418, i32 567498868, i32 1764313568, i32 -935031095, i32 -1989511742, i32 2037970062, i32 1047239000, i32 1910319033, i32 1337376481, i32 -1390940024, i32 -1402549984, i32 984907214, i32 1243112415, i32 830661914, i32 861968209, i32 2135253587, i32 2011214180, i32 -1367032981, i32 -1608712575, i32 731183368, i32 1750626376, i32 -48656571, i32 1820824798, i32 -122203525, i32 -752637069, i32 48394827, i32 -1890065633, i32 -1423284651, i32 671593195, i32 -1039978571, i32 2073724613, i32 145085239, i32 -2014171096, i32 -1515052097, i32 1790575107, i32 -2107839210, i32 472615631, i32 -1265457287, i32 -219090169, i32 -492745111, i32 -187865638, i32 -1093335547, i32 1646252340, i32 -24460122, i32 1402811438, i32 1436590835, i32 -516815478, i32 -344611594, i32 -331805821, i32 -274055072, i32 -1626972559, i32 273792366, i32 -1963377119, i32 104699613, i32 95345982, i32 -1119466010, i32 -1917480620, i32 1560637892, i32 -730921978, i32 369057872, i32 -81520232, i32 -375925059, i32 1137477952, i32 -1636341799, i32 1119727848, i32 -1954019447, i32 1530455833, i32 -287606328, i32 172466556, i32 266959938, i32 516552836, i32 0, i32 -2038232704, i32 -314035669, i32 1890328081, i32 1917742170, i32 -262898, i32 945164165, i32 -719438418, i32 958871085, i32 -647755249, i32 -1507760036, i32 1423022939, i32 775562294, i32 1739656202, i32 -418409641, i32 -1764576018, i32 -1851909221, i32 -984645440, i32 547512796, i32 1265195639, i32 437656594, i32 -1173691757, i32 719700128, i32 -532464606, i32 387781147, i32 218828297, i32 -944901493, i32 -1464259146, i32 -1446505442, i32 428169201, i32 122466165, i32 -574886247, i32 1627235199, i32 648017665, i32 -172204942, i32 1002783846, i32 2117360635, i32 695634755, i32 -958608605, i32 -60246291, i32 -245122844, i32 -590686415, i32 -2062531997, i32 574624663, i32 287343814, i32 612205898, i32 1039717051, i32 840019705, i32 -1586641111, i32 793451934, i32 821288114, i32 1391201670, i32 -472877119, i32 376187827, i32 -1181111952, i32 1224348052, i32 1679968233, i32 -1933268740, i32 1058709744, i32 752375421, i32 -1863376333, i32 1321699145, i32 -775825096, i32 -1560376118, i32 188127444, i32 -2117097739, i32 -567761542, i32 -1910056265, i32 -1079754835, i32 -1645990854, i32 -1844621192, i32 -862229921, i32 1180849278, i32 331544205, i32 -1192718120, i32 -144822727, i32 -1342864701, i32 -2134991011, i32 -1820562992, i32 766078933, i32 313773861, i32 -1724135252, i32 2108100632, i32 1668212892, i32 -1149510853, i32 2013908262, i32 418672217, i32 -1224610662, i32 -1700232369, i32 1852171925, i32 -427906305, i32 -821550660, i32 -387518699, i32 -1680229657, i32 919489135, i32 164948639, i32 2094410160, i32 -1297141340, i32 590424639, i32 -1808742747, i32 1723872674, i32 -1137216434, i32 -895026046, i32 -793714544, i32 -669699161, i32 -1739919100, i32 -621329940, i32 1343127501, i32 -164685935, i32 -695372211, i32 -1337113617, i32 1297403050, i32 81781910, i32 -1243373871, i32 -2011476886, i32 532201772, i32 1367295589, i32 -368796322, i32 895287692, i32 1953757831, i32 1093597963, i32 492483431, i32 -766340389, i32 1446242576, i32 1192455638, i32 1636604631, i32 209336225, i32 344873464, i32 1015671571, i32 669961897, i32 -919226527, i32 -437395172, i32 -1321436601, i32 -547775278, i32 1933530610, i32 -830924780, i32 935293895, i32 -840281097, i32 -1436852227, i32 1863638845, i32 -611944380, i32 -209597777, i32 -1002522264, i32 875313188, i32 1080017571, i32 -1015933411, i32 621591778, i32 1233856572, i32 -1790836979, i32 24197544, i32 -1277294580, i32 -459482956, i32 -1047501738, i32 -2073986101, i32 -1234119374, i32 1551124588, i32 1463996600], align 16
@Td3 = constant [256 x i32] [i32 -190361519, i32 1097159550, i32 396673818, i32 660510266, i32 -1418998981, i32 -1656360673, i32 -94852180, i32 -486304949, i32 821712160, i32 1986918061, i32 -864644728, i32 38544885, i32 -438830001, i32 718002117, i32 893681702, i32 1654886325, i32 -1319482914, i32 -1172609243, i32 -368142267, i32 -20913827, i32 796197571, i32 1290801793, i32 1184342925, i32 -738605461, i32 -1889540349, i32 -1835231979, i32 1836772287, i32 1381620373, i32 -1098699308, i32 1948373848, i32 -529979063, i32 -909622130, i32 -1031181707, i32 -1904641804, i32 1480485785, i32 -1183720153, i32 -514869570, i32 -2001922064, i32 548169417, i32 -835013507, i32 -548792221, i32 439452389, i32 1362321559, i32 1400849762, i32 1685577905, i32 1806599355, i32 -2120213250, i32 137073913, i32 1214797936, i32 1174215055, i32 -563312748, i32 2079897426, i32 1943217067, i32 1258480242, i32 529487843, i32 1437280870, i32 -349698126, i32 -1245576401, i32 -981755258, i32 923313619, i32 679998000, i32 -1079659997, i32 57326082, i32 377642221, i32 -820237430, i32 2041877159, i32 133361907, i32 1776460110, i32 -621490843, i32 96392454, i32 878845905, i32 -1493267772, i32 777231668, i32 -212492126, i32 -1964953083, i32 -152341084, i32 -2081670901, i32 1626319424, i32 1906247262, i32 1846563261, i32 562755902, i32 -586793578, i32 1040559837, i32 -423803315, i32 1418573201, i32 -1000536719, i32 114585348, i32 1343618912, i32 -1728371687, i32 -1108764714, i32 1078185097, i32 -643926169, i32 -398279248, i32 -1987344377, i32 425408743, i32 -923870343, i32 2081048481, i32 1108339068, i32 -2078357000, i32 0, i32 -2138668279, i32 736970802, i32 292596766, i32 1517440620, i32 251657213, i32 -2059905521, i32 -1361764803, i32 758720310, i32 265905162, i32 1554391400, i32 1532285339, i32 908999204, i32 174567692, i32 1474760595, i32 -292105548, i32 -1684955621, i32 -1060810880, i32 -601841055, i32 2001430874, i32 303699484, i32 -1816524062, i32 -1607801408, i32 585122620, i32 454499602, i32 151849742, i32 -1949848078, i32 -1230456531, i32 514443284, i32 -249985705, i32 1963412655, i32 -1713521682, i32 2137062819, i32 19308535, i32 1928707164, i32 1715193156, i32 -75615141, i32 1126790795, i32 600235211, i32 -302225226, i32 -453942344, i32 836553431, i32 1669664834, i32 -1759363053, i32 -971956092, i32 1243905413, i32 -1153566510, i32 -114159186, i32 698445255, i32 -1641067747, i32 -1305414692, i32 -2041385971, i32 -1042034569, i32 -1290376149, i32 1891211689, i32 -1807156719, i32 -379313593, i32 -57883480, i32 -264299872, i32 2100090966, i32 865136418, i32 1229899655, i32 953270745, i32 -895287668, i32 -737462632, i32 -176042074, i32 2061379749, i32 -1215420710, i32 -1379949505, i32 983426092, i32 2022837584, i32 1607244650, i32 2118541908, i32 -1928084746, i32 -658970480, i32 972512814, i32 -1011878526, i32 1568718495, i32 -795640727, i32 -718427793, i32 621982671, i32 -1399243832, i32 410887952, i32 -1671205144, i32 1002142683, i32 645401037, i32 1494807662, i32 -1699282452, i32 1335535747, i32 -1787927066, i32 -1671510, i32 -1127282655, i32 367585007, i32 -409216582, i32 1865862730, i32 -1626745622, i32 -1333995991, i32 -1531793615, i32 1059270954, i32 -1517014842, i32 -1570324427, i32 1320957812, i32 -2100648196, i32 -1865371424, i32 -1479011021, i32 77089521, i32 -321194175, i32 -850391425, i32 -1846137065, i32 1305906550, i32 -273658557, i32 -1437772596, i32 -1778065436, i32 -776608866, i32 1787304780, i32 740276417, i32 1699839814, i32 1592394909, i32 -1942659839, i32 -2022411270, i32 188821243, i32 1729977011, i32 -606973294, i32 274084841, i32 -699985043, i32 -681472870, i32 -1593017801, i32 -132870567, i32 322734571, i32 -1457000754, i32 1640576439, i32 484830689, i32 1202797690, i32 -757114468, i32 -227328171, i32 349075736, i32 -952647821, i32 -137500077, i32 -39167137, i32 1030690015, i32 1155237496, i32 -1342996022, i32 1757691577, i32 607398968, i32 -1556062270, i32 499347990, i32 -500888388, i32 1011452712, i32 227885567, i32 -1476300487, i32 213114376, i32 -1260086056, i32 1455525988, i32 -880516741, i32 850817237, i32 1817998408, i32 -1202240816], align 16
@Td4 = constant [256 x i32] [i32 1381126738, i32 151587081, i32 1785358954, i32 -707406379, i32 808464432, i32 909522486, i32 -1515870811, i32 943208504, i32 -1077952577, i32 1077952576, i32 -1549556829, i32 -1633771874, i32 -2122219135, i32 -202116109, i32 -673720361, i32 -67372037, i32 2088533116, i32 -471604253, i32 960051513, i32 -2105376126, i32 -1684300901, i32 791621423, i32 -1, i32 -2021161081, i32 875836468, i32 -1903260018, i32 1128481603, i32 1145324612, i32 -993737532, i32 -555819298, i32 -370546199, i32 -875836469, i32 1414812756, i32 2071690107, i32 -1802201964, i32 842150450, i32 -1499027802, i32 -1027423550, i32 589505315, i32 1027423549, i32 -286331154, i32 1280068684, i32 -1785358955, i32 185273099, i32 1111638594, i32 -84215046, i32 -1010580541, i32 1313754702, i32 134744072, i32 774778414, i32 -1583242847, i32 1717986918, i32 673720360, i32 -640034343, i32 606348324, i32 -1296911694, i32 1987475062, i32 1532713819, i32 -1566399838, i32 1229539657, i32 1835887981, i32 -1953789045, i32 -774778415, i32 623191333, i32 1920103026, i32 -117901064, i32 -151587082, i32 1684300900, i32 -2038004090, i32 1751672936, i32 -1734829928, i32 370546198, i32 -724249388, i32 -1532713820, i32 1549556828, i32 -858993460, i32 1566399837, i32 1701143909, i32 -1229539658, i32 -1835887982, i32 1819044972, i32 1886417008, i32 1212696648, i32 1347440720, i32 -33686019, i32 -303174163, i32 -1179010631, i32 -623191334, i32 1583242846, i32 353703189, i32 1179010630, i32 1465341783, i32 -1482184793, i32 -1920103027, i32 -1650614883, i32 -2071690108, i32 -1869574000, i32 -656877352, i32 -1414812757, i32 0, i32 -1936946036, i32 -1128481604, i32 -741092397, i32 168430090, i32 -134744073, i32 -454761244, i32 1482184792, i32 84215045, i32 -1195853640, i32 -1280068685, i32 1162167621, i32 101058054, i32 -791621424, i32 741092396, i32 505290270, i32 -1886417009, i32 -892679478, i32 1061109567, i32 252645135, i32 33686018, i32 -1044266559, i32 -1347440721, i32 -1111638595, i32 50529027, i32 16843009, i32 320017171, i32 -1970632054, i32 1802201963, i32 976894522, i32 -1852730991, i32 286331153, i32 1094795585, i32 1330597711, i32 1734829927, i32 -589505316, i32 -353703190, i32 -1751672937, i32 -218959118, i32 -808464433, i32 -825307442, i32 -252645136, i32 -1263225676, i32 -421075226, i32 1936946035, i32 -1768515946, i32 -1397969748, i32 1953789044, i32 572662306, i32 -404232217, i32 -1381126739, i32 892679477, i32 -2054847099, i32 -488447262, i32 -101058055, i32 926365495, i32 -387389208, i32 471604252, i32 1970632053, i32 -538976289, i32 1852730990, i32 1195853639, i32 -235802127, i32 437918234, i32 1903260017, i32 488447261, i32 690563369, i32 -976894523, i32 -1987475063, i32 1869573999, i32 -1212696649, i32 1650614882, i32 235802126, i32 -1431655766, i32 404232216, i32 -1094795586, i32 454761243, i32 -50529028, i32 1448498774, i32 1044266558, i32 1263225675, i32 -960051514, i32 -757935406, i32 2038004089, i32 538976288, i32 -1701143910, i32 -606348325, i32 -1061109568, i32 -16843010, i32 2021161080, i32 -842150451, i32 1515870810, i32 -185273100, i32 522133279, i32 -572662307, i32 -1465341784, i32 858993459, i32 -2004318072, i32 117901063, i32 -943208505, i32 825307441, i32 -1313754703, i32 303174162, i32 269488144, i32 1499027801, i32 656877351, i32 -2139062144, i32 -320017172, i32 1600085855, i32 1616928864, i32 1364283729, i32 2139062143, i32 -1448498775, i32 421075225, i32 -1246382667, i32 1246382666, i32 218959117, i32 757935405, i32 -437918235, i32 2054847098, i32 -1616928865, i32 -1819044973, i32 -909522487, i32 -1667457892, i32 -269488145, i32 -1600085856, i32 -522133280, i32 993737531, i32 1296911693, i32 -1364283730, i32 707406378, i32 -168430091, i32 -1330597712, i32 -926365496, i32 -336860181, i32 -1145324613, i32 1010580540, i32 -2088533117, i32 1397969747, i32 -1717986919, i32 1633771873, i32 387389207, i32 724249387, i32 67372036, i32 2122219134, i32 -1162167622, i32 2004318071, i32 -690563370, i32 640034342, i32 -505290271, i32 1768515945, i32 336860180, i32 1667457891, i32 1431655765, i32 555819297, i32 202116108, i32 2105376125], align 16
@rcon = constant [10 x i32] [i32 16777216, i32 33554432, i32 67108864, i32 134217728, i32 268435456, i32 536870912, i32 1073741824, i32 -2147483648, i32 452984832, i32 905969664], align 16
@.str = private constant [17 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\00"
@.str1 = private constant [17 x i8] c"\00\11\223DUfw\88\99\AA\BB\CC\DD\EE\FF\00"
@.str2 = private constant [17 x i8] c"i\C4\E0\D8j{\040\D8\CD\B7\80p\B4\C5Z\00"
@.str3 = private constant [25 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\00"
@.str4 = private constant [17 x i8] c"\DD\A9|\A4\86L\DF\E0n\AFp\A0\EC\0Dq\91\00"
@.str5 = private constant [33 x i8] c"\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F\00"
@.str6 = private constant [17 x i8] c"\8E\A2\B7\CAQgE\BF\EA\FCI\90KI`\89\00"
@.str7 = private constant [23 x i8] c"Encryption test %d %s\0A\00"
@.str8 = private constant [7 x i8] c"passed\00"
@.str9 = private constant [7 x i8] c"FAILED\00"
@.str10 = private constant [23 x i8] c"Decryption test %d %s\0A\00"

define i32 @rijndaelKeySetupEnc(i32* %rk, i8* %cipherKey, i32 %keyBits) nounwind ssp {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %rk, i32** %2, align 8
  store i8* %cipherKey, i8** %3, align 8
  store i32 %keyBits, i32* %4, align 4
  store i32 0, i32* %i, align 4
  %5 = load i8** %3, align 8
  %6 = getelementptr inbounds i8* %5, i64 0
  %7 = load i8* %6
  %8 = zext i8 %7 to i32
  %9 = shl i32 %8, 24
  %10 = load i8** %3, align 8
  %11 = getelementptr inbounds i8* %10, i64 1
  %12 = load i8* %11
  %13 = zext i8 %12 to i32
  %14 = shl i32 %13, 16
  %15 = xor i32 %9, %14
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 2
  %18 = load i8* %17
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, 8
  %21 = xor i32 %15, %20
  %22 = load i8** %3, align 8
  %23 = getelementptr inbounds i8* %22, i64 3
  %24 = load i8* %23
  %25 = zext i8 %24 to i32
  %26 = xor i32 %21, %25
  %27 = load i32** %2, align 8
  %28 = getelementptr inbounds i32* %27, i64 0
  store i32 %26, i32* %28
  %29 = load i8** %3, align 8
  %30 = getelementptr inbounds i8* %29, i64 4
  %31 = getelementptr inbounds i8* %30, i64 0
  %32 = load i8* %31
  %33 = zext i8 %32 to i32
  %34 = shl i32 %33, 24
  %35 = load i8** %3, align 8
  %36 = getelementptr inbounds i8* %35, i64 4
  %37 = getelementptr inbounds i8* %36, i64 1
  %38 = load i8* %37
  %39 = zext i8 %38 to i32
  %40 = shl i32 %39, 16
  %41 = xor i32 %34, %40
  %42 = load i8** %3, align 8
  %43 = getelementptr inbounds i8* %42, i64 4
  %44 = getelementptr inbounds i8* %43, i64 2
  %45 = load i8* %44
  %46 = zext i8 %45 to i32
  %47 = shl i32 %46, 8
  %48 = xor i32 %41, %47
  %49 = load i8** %3, align 8
  %50 = getelementptr inbounds i8* %49, i64 4
  %51 = getelementptr inbounds i8* %50, i64 3
  %52 = load i8* %51
  %53 = zext i8 %52 to i32
  %54 = xor i32 %48, %53
  %55 = load i32** %2, align 8
  %56 = getelementptr inbounds i32* %55, i64 1
  store i32 %54, i32* %56
  %57 = load i8** %3, align 8
  %58 = getelementptr inbounds i8* %57, i64 8
  %59 = getelementptr inbounds i8* %58, i64 0
  %60 = load i8* %59
  %61 = zext i8 %60 to i32
  %62 = shl i32 %61, 24
  %63 = load i8** %3, align 8
  %64 = getelementptr inbounds i8* %63, i64 8
  %65 = getelementptr inbounds i8* %64, i64 1
  %66 = load i8* %65
  %67 = zext i8 %66 to i32
  %68 = shl i32 %67, 16
  %69 = xor i32 %62, %68
  %70 = load i8** %3, align 8
  %71 = getelementptr inbounds i8* %70, i64 8
  %72 = getelementptr inbounds i8* %71, i64 2
  %73 = load i8* %72
  %74 = zext i8 %73 to i32
  %75 = shl i32 %74, 8
  %76 = xor i32 %69, %75
  %77 = load i8** %3, align 8
  %78 = getelementptr inbounds i8* %77, i64 8
  %79 = getelementptr inbounds i8* %78, i64 3
  %80 = load i8* %79
  %81 = zext i8 %80 to i32
  %82 = xor i32 %76, %81
  %83 = load i32** %2, align 8
  %84 = getelementptr inbounds i32* %83, i64 2
  store i32 %82, i32* %84
  %85 = load i8** %3, align 8
  %86 = getelementptr inbounds i8* %85, i64 12
  %87 = getelementptr inbounds i8* %86, i64 0
  %88 = load i8* %87
  %89 = zext i8 %88 to i32
  %90 = shl i32 %89, 24
  %91 = load i8** %3, align 8
  %92 = getelementptr inbounds i8* %91, i64 12
  %93 = getelementptr inbounds i8* %92, i64 1
  %94 = load i8* %93
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, 16
  %97 = xor i32 %90, %96
  %98 = load i8** %3, align 8
  %99 = getelementptr inbounds i8* %98, i64 12
  %100 = getelementptr inbounds i8* %99, i64 2
  %101 = load i8* %100
  %102 = zext i8 %101 to i32
  %103 = shl i32 %102, 8
  %104 = xor i32 %97, %103
  %105 = load i8** %3, align 8
  %106 = getelementptr inbounds i8* %105, i64 12
  %107 = getelementptr inbounds i8* %106, i64 3
  %108 = load i8* %107
  %109 = zext i8 %108 to i32
  %110 = xor i32 %104, %109
  %111 = load i32** %2, align 8
  %112 = getelementptr inbounds i32* %111, i64 3
  store i32 %110, i32* %112
  %113 = load i32* %4, align 4
  %114 = icmp eq i32 %113, 128
  br i1 %114, label %115, label %194

; <label>:115                                     ; preds = %0
  br label %116

; <label>:116                                     ; preds = %191, %115
  %117 = load i32** %2, align 8
  %118 = getelementptr inbounds i32* %117, i64 3
  %119 = load i32* %118
  store i32 %119, i32* %temp, align 4
  %120 = load i32** %2, align 8
  %121 = getelementptr inbounds i32* %120, i64 0
  %122 = load i32* %121
  %123 = load i32* %temp, align 4
  %124 = lshr i32 %123, 16
  %125 = and i32 %124, 255
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %126
  %128 = load i32* %127
  %129 = and i32 %128, -16777216
  %130 = xor i32 %122, %129
  %131 = load i32* %temp, align 4
  %132 = lshr i32 %131, 8
  %133 = and i32 %132, 255
  %134 = zext i32 %133 to i64
  %135 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %134
  %136 = load i32* %135
  %137 = and i32 %136, 16711680
  %138 = xor i32 %130, %137
  %139 = load i32* %temp, align 4
  %140 = and i32 %139, 255
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %141
  %143 = load i32* %142
  %144 = and i32 %143, 65280
  %145 = xor i32 %138, %144
  %146 = load i32* %temp, align 4
  %147 = lshr i32 %146, 24
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %148
  %150 = load i32* %149
  %151 = and i32 %150, 255
  %152 = xor i32 %145, %151
  %153 = load i32* %i, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [10 x i32]* @rcon, i32 0, i64 %154
  %156 = load i32* %155
  %157 = xor i32 %152, %156
  %158 = load i32** %2, align 8
  %159 = getelementptr inbounds i32* %158, i64 4
  store i32 %157, i32* %159
  %160 = load i32** %2, align 8
  %161 = getelementptr inbounds i32* %160, i64 1
  %162 = load i32* %161
  %163 = load i32** %2, align 8
  %164 = getelementptr inbounds i32* %163, i64 4
  %165 = load i32* %164
  %166 = xor i32 %162, %165
  %167 = load i32** %2, align 8
  %168 = getelementptr inbounds i32* %167, i64 5
  store i32 %166, i32* %168
  %169 = load i32** %2, align 8
  %170 = getelementptr inbounds i32* %169, i64 2
  %171 = load i32* %170
  %172 = load i32** %2, align 8
  %173 = getelementptr inbounds i32* %172, i64 5
  %174 = load i32* %173
  %175 = xor i32 %171, %174
  %176 = load i32** %2, align 8
  %177 = getelementptr inbounds i32* %176, i64 6
  store i32 %175, i32* %177
  %178 = load i32** %2, align 8
  %179 = getelementptr inbounds i32* %178, i64 3
  %180 = load i32* %179
  %181 = load i32** %2, align 8
  %182 = getelementptr inbounds i32* %181, i64 6
  %183 = load i32* %182
  %184 = xor i32 %180, %183
  %185 = load i32** %2, align 8
  %186 = getelementptr inbounds i32* %185, i64 7
  store i32 %184, i32* %186
  %187 = load i32* %i, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* %i, align 4
  %189 = icmp eq i32 %188, 10
  br i1 %189, label %190, label %191

; <label>:190                                     ; preds = %116
  store i32 10, i32* %1
  br label %554

; <label>:191                                     ; preds = %116
  %192 = load i32** %2, align 8
  %193 = getelementptr inbounds i32* %192, i64 4
  store i32* %193, i32** %2, align 8
  br label %116

; <label>:194                                     ; preds = %0
  %195 = load i8** %3, align 8
  %196 = getelementptr inbounds i8* %195, i64 16
  %197 = getelementptr inbounds i8* %196, i64 0
  %198 = load i8* %197
  %199 = zext i8 %198 to i32
  %200 = shl i32 %199, 24
  %201 = load i8** %3, align 8
  %202 = getelementptr inbounds i8* %201, i64 16
  %203 = getelementptr inbounds i8* %202, i64 1
  %204 = load i8* %203
  %205 = zext i8 %204 to i32
  %206 = shl i32 %205, 16
  %207 = xor i32 %200, %206
  %208 = load i8** %3, align 8
  %209 = getelementptr inbounds i8* %208, i64 16
  %210 = getelementptr inbounds i8* %209, i64 2
  %211 = load i8* %210
  %212 = zext i8 %211 to i32
  %213 = shl i32 %212, 8
  %214 = xor i32 %207, %213
  %215 = load i8** %3, align 8
  %216 = getelementptr inbounds i8* %215, i64 16
  %217 = getelementptr inbounds i8* %216, i64 3
  %218 = load i8* %217
  %219 = zext i8 %218 to i32
  %220 = xor i32 %214, %219
  %221 = load i32** %2, align 8
  %222 = getelementptr inbounds i32* %221, i64 4
  store i32 %220, i32* %222
  %223 = load i8** %3, align 8
  %224 = getelementptr inbounds i8* %223, i64 20
  %225 = getelementptr inbounds i8* %224, i64 0
  %226 = load i8* %225
  %227 = zext i8 %226 to i32
  %228 = shl i32 %227, 24
  %229 = load i8** %3, align 8
  %230 = getelementptr inbounds i8* %229, i64 20
  %231 = getelementptr inbounds i8* %230, i64 1
  %232 = load i8* %231
  %233 = zext i8 %232 to i32
  %234 = shl i32 %233, 16
  %235 = xor i32 %228, %234
  %236 = load i8** %3, align 8
  %237 = getelementptr inbounds i8* %236, i64 20
  %238 = getelementptr inbounds i8* %237, i64 2
  %239 = load i8* %238
  %240 = zext i8 %239 to i32
  %241 = shl i32 %240, 8
  %242 = xor i32 %235, %241
  %243 = load i8** %3, align 8
  %244 = getelementptr inbounds i8* %243, i64 20
  %245 = getelementptr inbounds i8* %244, i64 3
  %246 = load i8* %245
  %247 = zext i8 %246 to i32
  %248 = xor i32 %242, %247
  %249 = load i32** %2, align 8
  %250 = getelementptr inbounds i32* %249, i64 5
  store i32 %248, i32* %250
  %251 = load i32* %4, align 4
  %252 = icmp eq i32 %251, 192
  br i1 %252, label %253, label %350

; <label>:253                                     ; preds = %194
  br label %254

; <label>:254                                     ; preds = %329, %253
  %255 = load i32** %2, align 8
  %256 = getelementptr inbounds i32* %255, i64 5
  %257 = load i32* %256
  store i32 %257, i32* %temp, align 4
  %258 = load i32** %2, align 8
  %259 = getelementptr inbounds i32* %258, i64 0
  %260 = load i32* %259
  %261 = load i32* %temp, align 4
  %262 = lshr i32 %261, 16
  %263 = and i32 %262, 255
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %264
  %266 = load i32* %265
  %267 = and i32 %266, -16777216
  %268 = xor i32 %260, %267
  %269 = load i32* %temp, align 4
  %270 = lshr i32 %269, 8
  %271 = and i32 %270, 255
  %272 = zext i32 %271 to i64
  %273 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %272
  %274 = load i32* %273
  %275 = and i32 %274, 16711680
  %276 = xor i32 %268, %275
  %277 = load i32* %temp, align 4
  %278 = and i32 %277, 255
  %279 = zext i32 %278 to i64
  %280 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %279
  %281 = load i32* %280
  %282 = and i32 %281, 65280
  %283 = xor i32 %276, %282
  %284 = load i32* %temp, align 4
  %285 = lshr i32 %284, 24
  %286 = zext i32 %285 to i64
  %287 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %286
  %288 = load i32* %287
  %289 = and i32 %288, 255
  %290 = xor i32 %283, %289
  %291 = load i32* %i, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [10 x i32]* @rcon, i32 0, i64 %292
  %294 = load i32* %293
  %295 = xor i32 %290, %294
  %296 = load i32** %2, align 8
  %297 = getelementptr inbounds i32* %296, i64 6
  store i32 %295, i32* %297
  %298 = load i32** %2, align 8
  %299 = getelementptr inbounds i32* %298, i64 1
  %300 = load i32* %299
  %301 = load i32** %2, align 8
  %302 = getelementptr inbounds i32* %301, i64 6
  %303 = load i32* %302
  %304 = xor i32 %300, %303
  %305 = load i32** %2, align 8
  %306 = getelementptr inbounds i32* %305, i64 7
  store i32 %304, i32* %306
  %307 = load i32** %2, align 8
  %308 = getelementptr inbounds i32* %307, i64 2
  %309 = load i32* %308
  %310 = load i32** %2, align 8
  %311 = getelementptr inbounds i32* %310, i64 7
  %312 = load i32* %311
  %313 = xor i32 %309, %312
  %314 = load i32** %2, align 8
  %315 = getelementptr inbounds i32* %314, i64 8
  store i32 %313, i32* %315
  %316 = load i32** %2, align 8
  %317 = getelementptr inbounds i32* %316, i64 3
  %318 = load i32* %317
  %319 = load i32** %2, align 8
  %320 = getelementptr inbounds i32* %319, i64 8
  %321 = load i32* %320
  %322 = xor i32 %318, %321
  %323 = load i32** %2, align 8
  %324 = getelementptr inbounds i32* %323, i64 9
  store i32 %322, i32* %324
  %325 = load i32* %i, align 4
  %326 = add nsw i32 %325, 1
  store i32 %326, i32* %i, align 4
  %327 = icmp eq i32 %326, 8
  br i1 %327, label %328, label %329

; <label>:328                                     ; preds = %254
  store i32 12, i32* %1
  br label %554

; <label>:329                                     ; preds = %254
  %330 = load i32** %2, align 8
  %331 = getelementptr inbounds i32* %330, i64 4
  %332 = load i32* %331
  %333 = load i32** %2, align 8
  %334 = getelementptr inbounds i32* %333, i64 9
  %335 = load i32* %334
  %336 = xor i32 %332, %335
  %337 = load i32** %2, align 8
  %338 = getelementptr inbounds i32* %337, i64 10
  store i32 %336, i32* %338
  %339 = load i32** %2, align 8
  %340 = getelementptr inbounds i32* %339, i64 5
  %341 = load i32* %340
  %342 = load i32** %2, align 8
  %343 = getelementptr inbounds i32* %342, i64 10
  %344 = load i32* %343
  %345 = xor i32 %341, %344
  %346 = load i32** %2, align 8
  %347 = getelementptr inbounds i32* %346, i64 11
  store i32 %345, i32* %347
  %348 = load i32** %2, align 8
  %349 = getelementptr inbounds i32* %348, i64 6
  store i32* %349, i32** %2, align 8
  br label %254

; <label>:350                                     ; preds = %194
  %351 = load i8** %3, align 8
  %352 = getelementptr inbounds i8* %351, i64 24
  %353 = getelementptr inbounds i8* %352, i64 0
  %354 = load i8* %353
  %355 = zext i8 %354 to i32
  %356 = shl i32 %355, 24
  %357 = load i8** %3, align 8
  %358 = getelementptr inbounds i8* %357, i64 24
  %359 = getelementptr inbounds i8* %358, i64 1
  %360 = load i8* %359
  %361 = zext i8 %360 to i32
  %362 = shl i32 %361, 16
  %363 = xor i32 %356, %362
  %364 = load i8** %3, align 8
  %365 = getelementptr inbounds i8* %364, i64 24
  %366 = getelementptr inbounds i8* %365, i64 2
  %367 = load i8* %366
  %368 = zext i8 %367 to i32
  %369 = shl i32 %368, 8
  %370 = xor i32 %363, %369
  %371 = load i8** %3, align 8
  %372 = getelementptr inbounds i8* %371, i64 24
  %373 = getelementptr inbounds i8* %372, i64 3
  %374 = load i8* %373
  %375 = zext i8 %374 to i32
  %376 = xor i32 %370, %375
  %377 = load i32** %2, align 8
  %378 = getelementptr inbounds i32* %377, i64 6
  store i32 %376, i32* %378
  %379 = load i8** %3, align 8
  %380 = getelementptr inbounds i8* %379, i64 28
  %381 = getelementptr inbounds i8* %380, i64 0
  %382 = load i8* %381
  %383 = zext i8 %382 to i32
  %384 = shl i32 %383, 24
  %385 = load i8** %3, align 8
  %386 = getelementptr inbounds i8* %385, i64 28
  %387 = getelementptr inbounds i8* %386, i64 1
  %388 = load i8* %387
  %389 = zext i8 %388 to i32
  %390 = shl i32 %389, 16
  %391 = xor i32 %384, %390
  %392 = load i8** %3, align 8
  %393 = getelementptr inbounds i8* %392, i64 28
  %394 = getelementptr inbounds i8* %393, i64 2
  %395 = load i8* %394
  %396 = zext i8 %395 to i32
  %397 = shl i32 %396, 8
  %398 = xor i32 %391, %397
  %399 = load i8** %3, align 8
  %400 = getelementptr inbounds i8* %399, i64 28
  %401 = getelementptr inbounds i8* %400, i64 3
  %402 = load i8* %401
  %403 = zext i8 %402 to i32
  %404 = xor i32 %398, %403
  %405 = load i32** %2, align 8
  %406 = getelementptr inbounds i32* %405, i64 7
  store i32 %404, i32* %406
  %407 = load i32* %4, align 4
  %408 = icmp eq i32 %407, 256
  br i1 %408, label %409, label %553

; <label>:409                                     ; preds = %350
  br label %410

; <label>:410                                     ; preds = %485, %409
  %411 = load i32** %2, align 8
  %412 = getelementptr inbounds i32* %411, i64 7
  %413 = load i32* %412
  store i32 %413, i32* %temp, align 4
  %414 = load i32** %2, align 8
  %415 = getelementptr inbounds i32* %414, i64 0
  %416 = load i32* %415
  %417 = load i32* %temp, align 4
  %418 = lshr i32 %417, 16
  %419 = and i32 %418, 255
  %420 = zext i32 %419 to i64
  %421 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %420
  %422 = load i32* %421
  %423 = and i32 %422, -16777216
  %424 = xor i32 %416, %423
  %425 = load i32* %temp, align 4
  %426 = lshr i32 %425, 8
  %427 = and i32 %426, 255
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %428
  %430 = load i32* %429
  %431 = and i32 %430, 16711680
  %432 = xor i32 %424, %431
  %433 = load i32* %temp, align 4
  %434 = and i32 %433, 255
  %435 = zext i32 %434 to i64
  %436 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %435
  %437 = load i32* %436
  %438 = and i32 %437, 65280
  %439 = xor i32 %432, %438
  %440 = load i32* %temp, align 4
  %441 = lshr i32 %440, 24
  %442 = zext i32 %441 to i64
  %443 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %442
  %444 = load i32* %443
  %445 = and i32 %444, 255
  %446 = xor i32 %439, %445
  %447 = load i32* %i, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds [10 x i32]* @rcon, i32 0, i64 %448
  %450 = load i32* %449
  %451 = xor i32 %446, %450
  %452 = load i32** %2, align 8
  %453 = getelementptr inbounds i32* %452, i64 8
  store i32 %451, i32* %453
  %454 = load i32** %2, align 8
  %455 = getelementptr inbounds i32* %454, i64 1
  %456 = load i32* %455
  %457 = load i32** %2, align 8
  %458 = getelementptr inbounds i32* %457, i64 8
  %459 = load i32* %458
  %460 = xor i32 %456, %459
  %461 = load i32** %2, align 8
  %462 = getelementptr inbounds i32* %461, i64 9
  store i32 %460, i32* %462
  %463 = load i32** %2, align 8
  %464 = getelementptr inbounds i32* %463, i64 2
  %465 = load i32* %464
  %466 = load i32** %2, align 8
  %467 = getelementptr inbounds i32* %466, i64 9
  %468 = load i32* %467
  %469 = xor i32 %465, %468
  %470 = load i32** %2, align 8
  %471 = getelementptr inbounds i32* %470, i64 10
  store i32 %469, i32* %471
  %472 = load i32** %2, align 8
  %473 = getelementptr inbounds i32* %472, i64 3
  %474 = load i32* %473
  %475 = load i32** %2, align 8
  %476 = getelementptr inbounds i32* %475, i64 10
  %477 = load i32* %476
  %478 = xor i32 %474, %477
  %479 = load i32** %2, align 8
  %480 = getelementptr inbounds i32* %479, i64 11
  store i32 %478, i32* %480
  %481 = load i32* %i, align 4
  %482 = add nsw i32 %481, 1
  store i32 %482, i32* %i, align 4
  %483 = icmp eq i32 %482, 7
  br i1 %483, label %484, label %485

; <label>:484                                     ; preds = %410
  store i32 14, i32* %1
  br label %554

; <label>:485                                     ; preds = %410
  %486 = load i32** %2, align 8
  %487 = getelementptr inbounds i32* %486, i64 11
  %488 = load i32* %487
  store i32 %488, i32* %temp, align 4
  %489 = load i32** %2, align 8
  %490 = getelementptr inbounds i32* %489, i64 4
  %491 = load i32* %490
  %492 = load i32* %temp, align 4
  %493 = lshr i32 %492, 24
  %494 = zext i32 %493 to i64
  %495 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %494
  %496 = load i32* %495
  %497 = and i32 %496, -16777216
  %498 = xor i32 %491, %497
  %499 = load i32* %temp, align 4
  %500 = lshr i32 %499, 16
  %501 = and i32 %500, 255
  %502 = zext i32 %501 to i64
  %503 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %502
  %504 = load i32* %503
  %505 = and i32 %504, 16711680
  %506 = xor i32 %498, %505
  %507 = load i32* %temp, align 4
  %508 = lshr i32 %507, 8
  %509 = and i32 %508, 255
  %510 = zext i32 %509 to i64
  %511 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %510
  %512 = load i32* %511
  %513 = and i32 %512, 65280
  %514 = xor i32 %506, %513
  %515 = load i32* %temp, align 4
  %516 = and i32 %515, 255
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %517
  %519 = load i32* %518
  %520 = and i32 %519, 255
  %521 = xor i32 %514, %520
  %522 = load i32** %2, align 8
  %523 = getelementptr inbounds i32* %522, i64 12
  store i32 %521, i32* %523
  %524 = load i32** %2, align 8
  %525 = getelementptr inbounds i32* %524, i64 5
  %526 = load i32* %525
  %527 = load i32** %2, align 8
  %528 = getelementptr inbounds i32* %527, i64 12
  %529 = load i32* %528
  %530 = xor i32 %526, %529
  %531 = load i32** %2, align 8
  %532 = getelementptr inbounds i32* %531, i64 13
  store i32 %530, i32* %532
  %533 = load i32** %2, align 8
  %534 = getelementptr inbounds i32* %533, i64 6
  %535 = load i32* %534
  %536 = load i32** %2, align 8
  %537 = getelementptr inbounds i32* %536, i64 13
  %538 = load i32* %537
  %539 = xor i32 %535, %538
  %540 = load i32** %2, align 8
  %541 = getelementptr inbounds i32* %540, i64 14
  store i32 %539, i32* %541
  %542 = load i32** %2, align 8
  %543 = getelementptr inbounds i32* %542, i64 7
  %544 = load i32* %543
  %545 = load i32** %2, align 8
  %546 = getelementptr inbounds i32* %545, i64 14
  %547 = load i32* %546
  %548 = xor i32 %544, %547
  %549 = load i32** %2, align 8
  %550 = getelementptr inbounds i32* %549, i64 15
  store i32 %548, i32* %550
  %551 = load i32** %2, align 8
  %552 = getelementptr inbounds i32* %551, i64 8
  store i32* %552, i32** %2, align 8
  br label %410

; <label>:553                                     ; preds = %350
  store i32 0, i32* %1
  br label %554

; <label>:554                                     ; preds = %553, %484, %328, %190
  %555 = load i32* %1
  ret i32 %555
}

define i32 @rijndaelKeySetupDec(i32* %rk, i8* %cipherKey, i32 %keyBits) nounwind ssp {
  %1 = alloca i32*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %Nr = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %temp = alloca i32, align 4
  store i32* %rk, i32** %1, align 8
  store i8* %cipherKey, i8** %2, align 8
  store i32 %keyBits, i32* %3, align 4
  %4 = load i32** %1, align 8
  %5 = load i8** %2, align 8
  %6 = load i32* %3, align 4
  %7 = call i32 @rijndaelKeySetupEnc(i32* %4, i8* %5, i32 %6)
  store i32 %7, i32* %Nr, align 4
  store i32 0, i32* %i, align 4
  %8 = load i32* %Nr, align 4
  %9 = mul nsw i32 4, %8
  store i32 %9, i32* %j, align 4
  br label %10

; <label>:10                                      ; preds = %103, %0
  %11 = load i32* %i, align 4
  %12 = load i32* %j, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %108

; <label>:14                                      ; preds = %10
  %15 = load i32* %i, align 4
  %16 = sext i32 %15 to i64
  %17 = load i32** %1, align 8
  %18 = getelementptr inbounds i32* %17, i64 %16
  %19 = load i32* %18
  store i32 %19, i32* %temp, align 4
  %20 = load i32* %j, align 4
  %21 = sext i32 %20 to i64
  %22 = load i32** %1, align 8
  %23 = getelementptr inbounds i32* %22, i64 %21
  %24 = load i32* %23
  %25 = load i32* %i, align 4
  %26 = sext i32 %25 to i64
  %27 = load i32** %1, align 8
  %28 = getelementptr inbounds i32* %27, i64 %26
  store i32 %24, i32* %28
  %29 = load i32* %temp, align 4
  %30 = load i32* %j, align 4
  %31 = sext i32 %30 to i64
  %32 = load i32** %1, align 8
  %33 = getelementptr inbounds i32* %32, i64 %31
  store i32 %29, i32* %33
  %34 = load i32* %i, align 4
  %35 = add nsw i32 %34, 1
  %36 = sext i32 %35 to i64
  %37 = load i32** %1, align 8
  %38 = getelementptr inbounds i32* %37, i64 %36
  %39 = load i32* %38
  store i32 %39, i32* %temp, align 4
  %40 = load i32* %j, align 4
  %41 = add nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  %43 = load i32** %1, align 8
  %44 = getelementptr inbounds i32* %43, i64 %42
  %45 = load i32* %44
  %46 = load i32* %i, align 4
  %47 = add nsw i32 %46, 1
  %48 = sext i32 %47 to i64
  %49 = load i32** %1, align 8
  %50 = getelementptr inbounds i32* %49, i64 %48
  store i32 %45, i32* %50
  %51 = load i32* %temp, align 4
  %52 = load i32* %j, align 4
  %53 = add nsw i32 %52, 1
  %54 = sext i32 %53 to i64
  %55 = load i32** %1, align 8
  %56 = getelementptr inbounds i32* %55, i64 %54
  store i32 %51, i32* %56
  %57 = load i32* %i, align 4
  %58 = add nsw i32 %57, 2
  %59 = sext i32 %58 to i64
  %60 = load i32** %1, align 8
  %61 = getelementptr inbounds i32* %60, i64 %59
  %62 = load i32* %61
  store i32 %62, i32* %temp, align 4
  %63 = load i32* %j, align 4
  %64 = add nsw i32 %63, 2
  %65 = sext i32 %64 to i64
  %66 = load i32** %1, align 8
  %67 = getelementptr inbounds i32* %66, i64 %65
  %68 = load i32* %67
  %69 = load i32* %i, align 4
  %70 = add nsw i32 %69, 2
  %71 = sext i32 %70 to i64
  %72 = load i32** %1, align 8
  %73 = getelementptr inbounds i32* %72, i64 %71
  store i32 %68, i32* %73
  %74 = load i32* %temp, align 4
  %75 = load i32* %j, align 4
  %76 = add nsw i32 %75, 2
  %77 = sext i32 %76 to i64
  %78 = load i32** %1, align 8
  %79 = getelementptr inbounds i32* %78, i64 %77
  store i32 %74, i32* %79
  %80 = load i32* %i, align 4
  %81 = add nsw i32 %80, 3
  %82 = sext i32 %81 to i64
  %83 = load i32** %1, align 8
  %84 = getelementptr inbounds i32* %83, i64 %82
  %85 = load i32* %84
  store i32 %85, i32* %temp, align 4
  %86 = load i32* %j, align 4
  %87 = add nsw i32 %86, 3
  %88 = sext i32 %87 to i64
  %89 = load i32** %1, align 8
  %90 = getelementptr inbounds i32* %89, i64 %88
  %91 = load i32* %90
  %92 = load i32* %i, align 4
  %93 = add nsw i32 %92, 3
  %94 = sext i32 %93 to i64
  %95 = load i32** %1, align 8
  %96 = getelementptr inbounds i32* %95, i64 %94
  store i32 %91, i32* %96
  %97 = load i32* %temp, align 4
  %98 = load i32* %j, align 4
  %99 = add nsw i32 %98, 3
  %100 = sext i32 %99 to i64
  %101 = load i32** %1, align 8
  %102 = getelementptr inbounds i32* %101, i64 %100
  store i32 %97, i32* %102
  br label %103

; <label>:103                                     ; preds = %14
  %104 = load i32* %i, align 4
  %105 = add nsw i32 %104, 4
  store i32 %105, i32* %i, align 4
  %106 = load i32* %j, align 4
  %107 = sub nsw i32 %106, 4
  store i32 %107, i32* %j, align 4
  br label %10

; <label>:108                                     ; preds = %10
  store i32 1, i32* %i, align 4
  br label %109

; <label>:109                                     ; preds = %320, %108
  %110 = load i32* %i, align 4
  %111 = load i32* %Nr, align 4
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %113, label %323

; <label>:113                                     ; preds = %109
  %114 = load i32** %1, align 8
  %115 = getelementptr inbounds i32* %114, i64 4
  store i32* %115, i32** %1, align 8
  %116 = load i32** %1, align 8
  %117 = getelementptr inbounds i32* %116, i64 0
  %118 = load i32* %117
  %119 = lshr i32 %118, 24
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %120
  %122 = load i32* %121
  %123 = and i32 %122, 255
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %124
  %126 = load i32* %125
  %127 = load i32** %1, align 8
  %128 = getelementptr inbounds i32* %127, i64 0
  %129 = load i32* %128
  %130 = lshr i32 %129, 16
  %131 = and i32 %130, 255
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %132
  %134 = load i32* %133
  %135 = and i32 %134, 255
  %136 = zext i32 %135 to i64
  %137 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %136
  %138 = load i32* %137
  %139 = xor i32 %126, %138
  %140 = load i32** %1, align 8
  %141 = getelementptr inbounds i32* %140, i64 0
  %142 = load i32* %141
  %143 = lshr i32 %142, 8
  %144 = and i32 %143, 255
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %145
  %147 = load i32* %146
  %148 = and i32 %147, 255
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %149
  %151 = load i32* %150
  %152 = xor i32 %139, %151
  %153 = load i32** %1, align 8
  %154 = getelementptr inbounds i32* %153, i64 0
  %155 = load i32* %154
  %156 = and i32 %155, 255
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %157
  %159 = load i32* %158
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %161
  %163 = load i32* %162
  %164 = xor i32 %152, %163
  %165 = load i32** %1, align 8
  %166 = getelementptr inbounds i32* %165, i64 0
  store i32 %164, i32* %166
  %167 = load i32** %1, align 8
  %168 = getelementptr inbounds i32* %167, i64 1
  %169 = load i32* %168
  %170 = lshr i32 %169, 24
  %171 = zext i32 %170 to i64
  %172 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %171
  %173 = load i32* %172
  %174 = and i32 %173, 255
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %175
  %177 = load i32* %176
  %178 = load i32** %1, align 8
  %179 = getelementptr inbounds i32* %178, i64 1
  %180 = load i32* %179
  %181 = lshr i32 %180, 16
  %182 = and i32 %181, 255
  %183 = zext i32 %182 to i64
  %184 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %183
  %185 = load i32* %184
  %186 = and i32 %185, 255
  %187 = zext i32 %186 to i64
  %188 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %187
  %189 = load i32* %188
  %190 = xor i32 %177, %189
  %191 = load i32** %1, align 8
  %192 = getelementptr inbounds i32* %191, i64 1
  %193 = load i32* %192
  %194 = lshr i32 %193, 8
  %195 = and i32 %194, 255
  %196 = zext i32 %195 to i64
  %197 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %196
  %198 = load i32* %197
  %199 = and i32 %198, 255
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %200
  %202 = load i32* %201
  %203 = xor i32 %190, %202
  %204 = load i32** %1, align 8
  %205 = getelementptr inbounds i32* %204, i64 1
  %206 = load i32* %205
  %207 = and i32 %206, 255
  %208 = zext i32 %207 to i64
  %209 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %208
  %210 = load i32* %209
  %211 = and i32 %210, 255
  %212 = zext i32 %211 to i64
  %213 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %212
  %214 = load i32* %213
  %215 = xor i32 %203, %214
  %216 = load i32** %1, align 8
  %217 = getelementptr inbounds i32* %216, i64 1
  store i32 %215, i32* %217
  %218 = load i32** %1, align 8
  %219 = getelementptr inbounds i32* %218, i64 2
  %220 = load i32* %219
  %221 = lshr i32 %220, 24
  %222 = zext i32 %221 to i64
  %223 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %222
  %224 = load i32* %223
  %225 = and i32 %224, 255
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %226
  %228 = load i32* %227
  %229 = load i32** %1, align 8
  %230 = getelementptr inbounds i32* %229, i64 2
  %231 = load i32* %230
  %232 = lshr i32 %231, 16
  %233 = and i32 %232, 255
  %234 = zext i32 %233 to i64
  %235 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %234
  %236 = load i32* %235
  %237 = and i32 %236, 255
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %238
  %240 = load i32* %239
  %241 = xor i32 %228, %240
  %242 = load i32** %1, align 8
  %243 = getelementptr inbounds i32* %242, i64 2
  %244 = load i32* %243
  %245 = lshr i32 %244, 8
  %246 = and i32 %245, 255
  %247 = zext i32 %246 to i64
  %248 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %247
  %249 = load i32* %248
  %250 = and i32 %249, 255
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %251
  %253 = load i32* %252
  %254 = xor i32 %241, %253
  %255 = load i32** %1, align 8
  %256 = getelementptr inbounds i32* %255, i64 2
  %257 = load i32* %256
  %258 = and i32 %257, 255
  %259 = zext i32 %258 to i64
  %260 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %259
  %261 = load i32* %260
  %262 = and i32 %261, 255
  %263 = zext i32 %262 to i64
  %264 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %263
  %265 = load i32* %264
  %266 = xor i32 %254, %265
  %267 = load i32** %1, align 8
  %268 = getelementptr inbounds i32* %267, i64 2
  store i32 %266, i32* %268
  %269 = load i32** %1, align 8
  %270 = getelementptr inbounds i32* %269, i64 3
  %271 = load i32* %270
  %272 = lshr i32 %271, 24
  %273 = zext i32 %272 to i64
  %274 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %273
  %275 = load i32* %274
  %276 = and i32 %275, 255
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %277
  %279 = load i32* %278
  %280 = load i32** %1, align 8
  %281 = getelementptr inbounds i32* %280, i64 3
  %282 = load i32* %281
  %283 = lshr i32 %282, 16
  %284 = and i32 %283, 255
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %285
  %287 = load i32* %286
  %288 = and i32 %287, 255
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %289
  %291 = load i32* %290
  %292 = xor i32 %279, %291
  %293 = load i32** %1, align 8
  %294 = getelementptr inbounds i32* %293, i64 3
  %295 = load i32* %294
  %296 = lshr i32 %295, 8
  %297 = and i32 %296, 255
  %298 = zext i32 %297 to i64
  %299 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %298
  %300 = load i32* %299
  %301 = and i32 %300, 255
  %302 = zext i32 %301 to i64
  %303 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %302
  %304 = load i32* %303
  %305 = xor i32 %292, %304
  %306 = load i32** %1, align 8
  %307 = getelementptr inbounds i32* %306, i64 3
  %308 = load i32* %307
  %309 = and i32 %308, 255
  %310 = zext i32 %309 to i64
  %311 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %310
  %312 = load i32* %311
  %313 = and i32 %312, 255
  %314 = zext i32 %313 to i64
  %315 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %314
  %316 = load i32* %315
  %317 = xor i32 %305, %316
  %318 = load i32** %1, align 8
  %319 = getelementptr inbounds i32* %318, i64 3
  store i32 %317, i32* %319
  br label %320

; <label>:320                                     ; preds = %113
  %321 = load i32* %i, align 4
  %322 = add nsw i32 %321, 1
  store i32 %322, i32* %i, align 4
  br label %109

; <label>:323                                     ; preds = %109
  %324 = load i32* %Nr, align 4
  ret i32 %324
}

define void @rijndaelEncrypt(i32* %rk, i32 %Nr, i8* %pt, i8* %ct) nounwind ssp {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %s3 = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %t3 = alloca i32, align 4
  %r = alloca i32, align 4
  store i32* %rk, i32** %1, align 8
  store i32 %Nr, i32* %2, align 4
  store i8* %pt, i8** %3, align 8
  store i8* %ct, i8** %4, align 8
  %5 = load i8** %3, align 8
  %6 = getelementptr inbounds i8* %5, i64 0
  %7 = load i8* %6
  %8 = zext i8 %7 to i32
  %9 = shl i32 %8, 24
  %10 = load i8** %3, align 8
  %11 = getelementptr inbounds i8* %10, i64 1
  %12 = load i8* %11
  %13 = zext i8 %12 to i32
  %14 = shl i32 %13, 16
  %15 = xor i32 %9, %14
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 2
  %18 = load i8* %17
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, 8
  %21 = xor i32 %15, %20
  %22 = load i8** %3, align 8
  %23 = getelementptr inbounds i8* %22, i64 3
  %24 = load i8* %23
  %25 = zext i8 %24 to i32
  %26 = xor i32 %21, %25
  %27 = load i32** %1, align 8
  %28 = getelementptr inbounds i32* %27, i64 0
  %29 = load i32* %28
  %30 = xor i32 %26, %29
  store i32 %30, i32* %s0, align 4
  %31 = load i8** %3, align 8
  %32 = getelementptr inbounds i8* %31, i64 4
  %33 = getelementptr inbounds i8* %32, i64 0
  %34 = load i8* %33
  %35 = zext i8 %34 to i32
  %36 = shl i32 %35, 24
  %37 = load i8** %3, align 8
  %38 = getelementptr inbounds i8* %37, i64 4
  %39 = getelementptr inbounds i8* %38, i64 1
  %40 = load i8* %39
  %41 = zext i8 %40 to i32
  %42 = shl i32 %41, 16
  %43 = xor i32 %36, %42
  %44 = load i8** %3, align 8
  %45 = getelementptr inbounds i8* %44, i64 4
  %46 = getelementptr inbounds i8* %45, i64 2
  %47 = load i8* %46
  %48 = zext i8 %47 to i32
  %49 = shl i32 %48, 8
  %50 = xor i32 %43, %49
  %51 = load i8** %3, align 8
  %52 = getelementptr inbounds i8* %51, i64 4
  %53 = getelementptr inbounds i8* %52, i64 3
  %54 = load i8* %53
  %55 = zext i8 %54 to i32
  %56 = xor i32 %50, %55
  %57 = load i32** %1, align 8
  %58 = getelementptr inbounds i32* %57, i64 1
  %59 = load i32* %58
  %60 = xor i32 %56, %59
  store i32 %60, i32* %s1, align 4
  %61 = load i8** %3, align 8
  %62 = getelementptr inbounds i8* %61, i64 8
  %63 = getelementptr inbounds i8* %62, i64 0
  %64 = load i8* %63
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 24
  %67 = load i8** %3, align 8
  %68 = getelementptr inbounds i8* %67, i64 8
  %69 = getelementptr inbounds i8* %68, i64 1
  %70 = load i8* %69
  %71 = zext i8 %70 to i32
  %72 = shl i32 %71, 16
  %73 = xor i32 %66, %72
  %74 = load i8** %3, align 8
  %75 = getelementptr inbounds i8* %74, i64 8
  %76 = getelementptr inbounds i8* %75, i64 2
  %77 = load i8* %76
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, 8
  %80 = xor i32 %73, %79
  %81 = load i8** %3, align 8
  %82 = getelementptr inbounds i8* %81, i64 8
  %83 = getelementptr inbounds i8* %82, i64 3
  %84 = load i8* %83
  %85 = zext i8 %84 to i32
  %86 = xor i32 %80, %85
  %87 = load i32** %1, align 8
  %88 = getelementptr inbounds i32* %87, i64 2
  %89 = load i32* %88
  %90 = xor i32 %86, %89
  store i32 %90, i32* %s2, align 4
  %91 = load i8** %3, align 8
  %92 = getelementptr inbounds i8* %91, i64 12
  %93 = getelementptr inbounds i8* %92, i64 0
  %94 = load i8* %93
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, 24
  %97 = load i8** %3, align 8
  %98 = getelementptr inbounds i8* %97, i64 12
  %99 = getelementptr inbounds i8* %98, i64 1
  %100 = load i8* %99
  %101 = zext i8 %100 to i32
  %102 = shl i32 %101, 16
  %103 = xor i32 %96, %102
  %104 = load i8** %3, align 8
  %105 = getelementptr inbounds i8* %104, i64 12
  %106 = getelementptr inbounds i8* %105, i64 2
  %107 = load i8* %106
  %108 = zext i8 %107 to i32
  %109 = shl i32 %108, 8
  %110 = xor i32 %103, %109
  %111 = load i8** %3, align 8
  %112 = getelementptr inbounds i8* %111, i64 12
  %113 = getelementptr inbounds i8* %112, i64 3
  %114 = load i8* %113
  %115 = zext i8 %114 to i32
  %116 = xor i32 %110, %115
  %117 = load i32** %1, align 8
  %118 = getelementptr inbounds i32* %117, i64 3
  %119 = load i32* %118
  %120 = xor i32 %116, %119
  store i32 %120, i32* %s3, align 4
  %121 = load i32* %2, align 4
  %122 = ashr i32 %121, 1
  store i32 %122, i32* %r, align 4
  br label %123

; <label>:123                                     ; preds = %246, %0
  %124 = load i32* %s0, align 4
  %125 = lshr i32 %124, 24
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %126
  %128 = load i32* %127
  %129 = load i32* %s1, align 4
  %130 = lshr i32 %129, 16
  %131 = and i32 %130, 255
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %132
  %134 = load i32* %133
  %135 = xor i32 %128, %134
  %136 = load i32* %s2, align 4
  %137 = lshr i32 %136, 8
  %138 = and i32 %137, 255
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %139
  %141 = load i32* %140
  %142 = xor i32 %135, %141
  %143 = load i32* %s3, align 4
  %144 = and i32 %143, 255
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %145
  %147 = load i32* %146
  %148 = xor i32 %142, %147
  %149 = load i32** %1, align 8
  %150 = getelementptr inbounds i32* %149, i64 4
  %151 = load i32* %150
  %152 = xor i32 %148, %151
  store i32 %152, i32* %t0, align 4
  %153 = load i32* %s1, align 4
  %154 = lshr i32 %153, 24
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %155
  %157 = load i32* %156
  %158 = load i32* %s2, align 4
  %159 = lshr i32 %158, 16
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %161
  %163 = load i32* %162
  %164 = xor i32 %157, %163
  %165 = load i32* %s3, align 4
  %166 = lshr i32 %165, 8
  %167 = and i32 %166, 255
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %168
  %170 = load i32* %169
  %171 = xor i32 %164, %170
  %172 = load i32* %s0, align 4
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %174
  %176 = load i32* %175
  %177 = xor i32 %171, %176
  %178 = load i32** %1, align 8
  %179 = getelementptr inbounds i32* %178, i64 5
  %180 = load i32* %179
  %181 = xor i32 %177, %180
  store i32 %181, i32* %t1, align 4
  %182 = load i32* %s2, align 4
  %183 = lshr i32 %182, 24
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %184
  %186 = load i32* %185
  %187 = load i32* %s3, align 4
  %188 = lshr i32 %187, 16
  %189 = and i32 %188, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %190
  %192 = load i32* %191
  %193 = xor i32 %186, %192
  %194 = load i32* %s0, align 4
  %195 = lshr i32 %194, 8
  %196 = and i32 %195, 255
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %197
  %199 = load i32* %198
  %200 = xor i32 %193, %199
  %201 = load i32* %s1, align 4
  %202 = and i32 %201, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %203
  %205 = load i32* %204
  %206 = xor i32 %200, %205
  %207 = load i32** %1, align 8
  %208 = getelementptr inbounds i32* %207, i64 6
  %209 = load i32* %208
  %210 = xor i32 %206, %209
  store i32 %210, i32* %t2, align 4
  %211 = load i32* %s3, align 4
  %212 = lshr i32 %211, 24
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %213
  %215 = load i32* %214
  %216 = load i32* %s0, align 4
  %217 = lshr i32 %216, 16
  %218 = and i32 %217, 255
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %219
  %221 = load i32* %220
  %222 = xor i32 %215, %221
  %223 = load i32* %s1, align 4
  %224 = lshr i32 %223, 8
  %225 = and i32 %224, 255
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %226
  %228 = load i32* %227
  %229 = xor i32 %222, %228
  %230 = load i32* %s2, align 4
  %231 = and i32 %230, 255
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %232
  %234 = load i32* %233
  %235 = xor i32 %229, %234
  %236 = load i32** %1, align 8
  %237 = getelementptr inbounds i32* %236, i64 7
  %238 = load i32* %237
  %239 = xor i32 %235, %238
  store i32 %239, i32* %t3, align 4
  %240 = load i32** %1, align 8
  %241 = getelementptr inbounds i32* %240, i64 8
  store i32* %241, i32** %1, align 8
  %242 = load i32* %r, align 4
  %243 = add nsw i32 %242, -1
  store i32 %243, i32* %r, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

; <label>:245                                     ; preds = %123
  br label %363

; <label>:246                                     ; preds = %123
  %247 = load i32* %t0, align 4
  %248 = lshr i32 %247, 24
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %249
  %251 = load i32* %250
  %252 = load i32* %t1, align 4
  %253 = lshr i32 %252, 16
  %254 = and i32 %253, 255
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %255
  %257 = load i32* %256
  %258 = xor i32 %251, %257
  %259 = load i32* %t2, align 4
  %260 = lshr i32 %259, 8
  %261 = and i32 %260, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %262
  %264 = load i32* %263
  %265 = xor i32 %258, %264
  %266 = load i32* %t3, align 4
  %267 = and i32 %266, 255
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %268
  %270 = load i32* %269
  %271 = xor i32 %265, %270
  %272 = load i32** %1, align 8
  %273 = getelementptr inbounds i32* %272, i64 0
  %274 = load i32* %273
  %275 = xor i32 %271, %274
  store i32 %275, i32* %s0, align 4
  %276 = load i32* %t1, align 4
  %277 = lshr i32 %276, 24
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %278
  %280 = load i32* %279
  %281 = load i32* %t2, align 4
  %282 = lshr i32 %281, 16
  %283 = and i32 %282, 255
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %284
  %286 = load i32* %285
  %287 = xor i32 %280, %286
  %288 = load i32* %t3, align 4
  %289 = lshr i32 %288, 8
  %290 = and i32 %289, 255
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %291
  %293 = load i32* %292
  %294 = xor i32 %287, %293
  %295 = load i32* %t0, align 4
  %296 = and i32 %295, 255
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %297
  %299 = load i32* %298
  %300 = xor i32 %294, %299
  %301 = load i32** %1, align 8
  %302 = getelementptr inbounds i32* %301, i64 1
  %303 = load i32* %302
  %304 = xor i32 %300, %303
  store i32 %304, i32* %s1, align 4
  %305 = load i32* %t2, align 4
  %306 = lshr i32 %305, 24
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %307
  %309 = load i32* %308
  %310 = load i32* %t3, align 4
  %311 = lshr i32 %310, 16
  %312 = and i32 %311, 255
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %313
  %315 = load i32* %314
  %316 = xor i32 %309, %315
  %317 = load i32* %t0, align 4
  %318 = lshr i32 %317, 8
  %319 = and i32 %318, 255
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %320
  %322 = load i32* %321
  %323 = xor i32 %316, %322
  %324 = load i32* %t1, align 4
  %325 = and i32 %324, 255
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %326
  %328 = load i32* %327
  %329 = xor i32 %323, %328
  %330 = load i32** %1, align 8
  %331 = getelementptr inbounds i32* %330, i64 2
  %332 = load i32* %331
  %333 = xor i32 %329, %332
  store i32 %333, i32* %s2, align 4
  %334 = load i32* %t3, align 4
  %335 = lshr i32 %334, 24
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds [256 x i32]* @Te0, i32 0, i64 %336
  %338 = load i32* %337
  %339 = load i32* %t0, align 4
  %340 = lshr i32 %339, 16
  %341 = and i32 %340, 255
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i32]* @Te1, i32 0, i64 %342
  %344 = load i32* %343
  %345 = xor i32 %338, %344
  %346 = load i32* %t1, align 4
  %347 = lshr i32 %346, 8
  %348 = and i32 %347, 255
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds [256 x i32]* @Te2, i32 0, i64 %349
  %351 = load i32* %350
  %352 = xor i32 %345, %351
  %353 = load i32* %t2, align 4
  %354 = and i32 %353, 255
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds [256 x i32]* @Te3, i32 0, i64 %355
  %357 = load i32* %356
  %358 = xor i32 %352, %357
  %359 = load i32** %1, align 8
  %360 = getelementptr inbounds i32* %359, i64 3
  %361 = load i32* %360
  %362 = xor i32 %358, %361
  store i32 %362, i32* %s3, align 4
  br label %123

; <label>:363                                     ; preds = %245
  %364 = load i32* %t0, align 4
  %365 = lshr i32 %364, 24
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %366
  %368 = load i32* %367
  %369 = and i32 %368, -16777216
  %370 = load i32* %t1, align 4
  %371 = lshr i32 %370, 16
  %372 = and i32 %371, 255
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %373
  %375 = load i32* %374
  %376 = and i32 %375, 16711680
  %377 = xor i32 %369, %376
  %378 = load i32* %t2, align 4
  %379 = lshr i32 %378, 8
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %381
  %383 = load i32* %382
  %384 = and i32 %383, 65280
  %385 = xor i32 %377, %384
  %386 = load i32* %t3, align 4
  %387 = and i32 %386, 255
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %388
  %390 = load i32* %389
  %391 = and i32 %390, 255
  %392 = xor i32 %385, %391
  %393 = load i32** %1, align 8
  %394 = getelementptr inbounds i32* %393, i64 0
  %395 = load i32* %394
  %396 = xor i32 %392, %395
  store i32 %396, i32* %s0, align 4
  %397 = load i32* %s0, align 4
  %398 = lshr i32 %397, 24
  %399 = trunc i32 %398 to i8
  %400 = load i8** %4, align 8
  %401 = getelementptr inbounds i8* %400, i64 0
  store i8 %399, i8* %401
  %402 = load i32* %s0, align 4
  %403 = lshr i32 %402, 16
  %404 = trunc i32 %403 to i8
  %405 = load i8** %4, align 8
  %406 = getelementptr inbounds i8* %405, i64 1
  store i8 %404, i8* %406
  %407 = load i32* %s0, align 4
  %408 = lshr i32 %407, 8
  %409 = trunc i32 %408 to i8
  %410 = load i8** %4, align 8
  %411 = getelementptr inbounds i8* %410, i64 2
  store i8 %409, i8* %411
  %412 = load i32* %s0, align 4
  %413 = trunc i32 %412 to i8
  %414 = load i8** %4, align 8
  %415 = getelementptr inbounds i8* %414, i64 3
  store i8 %413, i8* %415
  %416 = load i32* %t1, align 4
  %417 = lshr i32 %416, 24
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %418
  %420 = load i32* %419
  %421 = and i32 %420, -16777216
  %422 = load i32* %t2, align 4
  %423 = lshr i32 %422, 16
  %424 = and i32 %423, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %425
  %427 = load i32* %426
  %428 = and i32 %427, 16711680
  %429 = xor i32 %421, %428
  %430 = load i32* %t3, align 4
  %431 = lshr i32 %430, 8
  %432 = and i32 %431, 255
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %433
  %435 = load i32* %434
  %436 = and i32 %435, 65280
  %437 = xor i32 %429, %436
  %438 = load i32* %t0, align 4
  %439 = and i32 %438, 255
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %440
  %442 = load i32* %441
  %443 = and i32 %442, 255
  %444 = xor i32 %437, %443
  %445 = load i32** %1, align 8
  %446 = getelementptr inbounds i32* %445, i64 1
  %447 = load i32* %446
  %448 = xor i32 %444, %447
  store i32 %448, i32* %s1, align 4
  %449 = load i32* %s1, align 4
  %450 = lshr i32 %449, 24
  %451 = trunc i32 %450 to i8
  %452 = load i8** %4, align 8
  %453 = getelementptr inbounds i8* %452, i64 4
  %454 = getelementptr inbounds i8* %453, i64 0
  store i8 %451, i8* %454
  %455 = load i32* %s1, align 4
  %456 = lshr i32 %455, 16
  %457 = trunc i32 %456 to i8
  %458 = load i8** %4, align 8
  %459 = getelementptr inbounds i8* %458, i64 4
  %460 = getelementptr inbounds i8* %459, i64 1
  store i8 %457, i8* %460
  %461 = load i32* %s1, align 4
  %462 = lshr i32 %461, 8
  %463 = trunc i32 %462 to i8
  %464 = load i8** %4, align 8
  %465 = getelementptr inbounds i8* %464, i64 4
  %466 = getelementptr inbounds i8* %465, i64 2
  store i8 %463, i8* %466
  %467 = load i32* %s1, align 4
  %468 = trunc i32 %467 to i8
  %469 = load i8** %4, align 8
  %470 = getelementptr inbounds i8* %469, i64 4
  %471 = getelementptr inbounds i8* %470, i64 3
  store i8 %468, i8* %471
  %472 = load i32* %t2, align 4
  %473 = lshr i32 %472, 24
  %474 = zext i32 %473 to i64
  %475 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %474
  %476 = load i32* %475
  %477 = and i32 %476, -16777216
  %478 = load i32* %t3, align 4
  %479 = lshr i32 %478, 16
  %480 = and i32 %479, 255
  %481 = zext i32 %480 to i64
  %482 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %481
  %483 = load i32* %482
  %484 = and i32 %483, 16711680
  %485 = xor i32 %477, %484
  %486 = load i32* %t0, align 4
  %487 = lshr i32 %486, 8
  %488 = and i32 %487, 255
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %489
  %491 = load i32* %490
  %492 = and i32 %491, 65280
  %493 = xor i32 %485, %492
  %494 = load i32* %t1, align 4
  %495 = and i32 %494, 255
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %496
  %498 = load i32* %497
  %499 = and i32 %498, 255
  %500 = xor i32 %493, %499
  %501 = load i32** %1, align 8
  %502 = getelementptr inbounds i32* %501, i64 2
  %503 = load i32* %502
  %504 = xor i32 %500, %503
  store i32 %504, i32* %s2, align 4
  %505 = load i32* %s2, align 4
  %506 = lshr i32 %505, 24
  %507 = trunc i32 %506 to i8
  %508 = load i8** %4, align 8
  %509 = getelementptr inbounds i8* %508, i64 8
  %510 = getelementptr inbounds i8* %509, i64 0
  store i8 %507, i8* %510
  %511 = load i32* %s2, align 4
  %512 = lshr i32 %511, 16
  %513 = trunc i32 %512 to i8
  %514 = load i8** %4, align 8
  %515 = getelementptr inbounds i8* %514, i64 8
  %516 = getelementptr inbounds i8* %515, i64 1
  store i8 %513, i8* %516
  %517 = load i32* %s2, align 4
  %518 = lshr i32 %517, 8
  %519 = trunc i32 %518 to i8
  %520 = load i8** %4, align 8
  %521 = getelementptr inbounds i8* %520, i64 8
  %522 = getelementptr inbounds i8* %521, i64 2
  store i8 %519, i8* %522
  %523 = load i32* %s2, align 4
  %524 = trunc i32 %523 to i8
  %525 = load i8** %4, align 8
  %526 = getelementptr inbounds i8* %525, i64 8
  %527 = getelementptr inbounds i8* %526, i64 3
  store i8 %524, i8* %527
  %528 = load i32* %t3, align 4
  %529 = lshr i32 %528, 24
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %530
  %532 = load i32* %531
  %533 = and i32 %532, -16777216
  %534 = load i32* %t0, align 4
  %535 = lshr i32 %534, 16
  %536 = and i32 %535, 255
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %537
  %539 = load i32* %538
  %540 = and i32 %539, 16711680
  %541 = xor i32 %533, %540
  %542 = load i32* %t1, align 4
  %543 = lshr i32 %542, 8
  %544 = and i32 %543, 255
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %545
  %547 = load i32* %546
  %548 = and i32 %547, 65280
  %549 = xor i32 %541, %548
  %550 = load i32* %t2, align 4
  %551 = and i32 %550, 255
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds [256 x i32]* @Te4, i32 0, i64 %552
  %554 = load i32* %553
  %555 = and i32 %554, 255
  %556 = xor i32 %549, %555
  %557 = load i32** %1, align 8
  %558 = getelementptr inbounds i32* %557, i64 3
  %559 = load i32* %558
  %560 = xor i32 %556, %559
  store i32 %560, i32* %s3, align 4
  %561 = load i32* %s3, align 4
  %562 = lshr i32 %561, 24
  %563 = trunc i32 %562 to i8
  %564 = load i8** %4, align 8
  %565 = getelementptr inbounds i8* %564, i64 12
  %566 = getelementptr inbounds i8* %565, i64 0
  store i8 %563, i8* %566
  %567 = load i32* %s3, align 4
  %568 = lshr i32 %567, 16
  %569 = trunc i32 %568 to i8
  %570 = load i8** %4, align 8
  %571 = getelementptr inbounds i8* %570, i64 12
  %572 = getelementptr inbounds i8* %571, i64 1
  store i8 %569, i8* %572
  %573 = load i32* %s3, align 4
  %574 = lshr i32 %573, 8
  %575 = trunc i32 %574 to i8
  %576 = load i8** %4, align 8
  %577 = getelementptr inbounds i8* %576, i64 12
  %578 = getelementptr inbounds i8* %577, i64 2
  store i8 %575, i8* %578
  %579 = load i32* %s3, align 4
  %580 = trunc i32 %579 to i8
  %581 = load i8** %4, align 8
  %582 = getelementptr inbounds i8* %581, i64 12
  %583 = getelementptr inbounds i8* %582, i64 3
  store i8 %580, i8* %583
  ret void
}

define void @rijndaelDecrypt(i32* %rk, i32 %Nr, i8* %ct, i8* %pt) nounwind ssp {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %s2 = alloca i32, align 4
  %s3 = alloca i32, align 4
  %t0 = alloca i32, align 4
  %t1 = alloca i32, align 4
  %t2 = alloca i32, align 4
  %t3 = alloca i32, align 4
  %r = alloca i32, align 4
  store i32* %rk, i32** %1, align 8
  store i32 %Nr, i32* %2, align 4
  store i8* %ct, i8** %3, align 8
  store i8* %pt, i8** %4, align 8
  %5 = load i8** %3, align 8
  %6 = getelementptr inbounds i8* %5, i64 0
  %7 = load i8* %6
  %8 = zext i8 %7 to i32
  %9 = shl i32 %8, 24
  %10 = load i8** %3, align 8
  %11 = getelementptr inbounds i8* %10, i64 1
  %12 = load i8* %11
  %13 = zext i8 %12 to i32
  %14 = shl i32 %13, 16
  %15 = xor i32 %9, %14
  %16 = load i8** %3, align 8
  %17 = getelementptr inbounds i8* %16, i64 2
  %18 = load i8* %17
  %19 = zext i8 %18 to i32
  %20 = shl i32 %19, 8
  %21 = xor i32 %15, %20
  %22 = load i8** %3, align 8
  %23 = getelementptr inbounds i8* %22, i64 3
  %24 = load i8* %23
  %25 = zext i8 %24 to i32
  %26 = xor i32 %21, %25
  %27 = load i32** %1, align 8
  %28 = getelementptr inbounds i32* %27, i64 0
  %29 = load i32* %28
  %30 = xor i32 %26, %29
  store i32 %30, i32* %s0, align 4
  %31 = load i8** %3, align 8
  %32 = getelementptr inbounds i8* %31, i64 4
  %33 = getelementptr inbounds i8* %32, i64 0
  %34 = load i8* %33
  %35 = zext i8 %34 to i32
  %36 = shl i32 %35, 24
  %37 = load i8** %3, align 8
  %38 = getelementptr inbounds i8* %37, i64 4
  %39 = getelementptr inbounds i8* %38, i64 1
  %40 = load i8* %39
  %41 = zext i8 %40 to i32
  %42 = shl i32 %41, 16
  %43 = xor i32 %36, %42
  %44 = load i8** %3, align 8
  %45 = getelementptr inbounds i8* %44, i64 4
  %46 = getelementptr inbounds i8* %45, i64 2
  %47 = load i8* %46
  %48 = zext i8 %47 to i32
  %49 = shl i32 %48, 8
  %50 = xor i32 %43, %49
  %51 = load i8** %3, align 8
  %52 = getelementptr inbounds i8* %51, i64 4
  %53 = getelementptr inbounds i8* %52, i64 3
  %54 = load i8* %53
  %55 = zext i8 %54 to i32
  %56 = xor i32 %50, %55
  %57 = load i32** %1, align 8
  %58 = getelementptr inbounds i32* %57, i64 1
  %59 = load i32* %58
  %60 = xor i32 %56, %59
  store i32 %60, i32* %s1, align 4
  %61 = load i8** %3, align 8
  %62 = getelementptr inbounds i8* %61, i64 8
  %63 = getelementptr inbounds i8* %62, i64 0
  %64 = load i8* %63
  %65 = zext i8 %64 to i32
  %66 = shl i32 %65, 24
  %67 = load i8** %3, align 8
  %68 = getelementptr inbounds i8* %67, i64 8
  %69 = getelementptr inbounds i8* %68, i64 1
  %70 = load i8* %69
  %71 = zext i8 %70 to i32
  %72 = shl i32 %71, 16
  %73 = xor i32 %66, %72
  %74 = load i8** %3, align 8
  %75 = getelementptr inbounds i8* %74, i64 8
  %76 = getelementptr inbounds i8* %75, i64 2
  %77 = load i8* %76
  %78 = zext i8 %77 to i32
  %79 = shl i32 %78, 8
  %80 = xor i32 %73, %79
  %81 = load i8** %3, align 8
  %82 = getelementptr inbounds i8* %81, i64 8
  %83 = getelementptr inbounds i8* %82, i64 3
  %84 = load i8* %83
  %85 = zext i8 %84 to i32
  %86 = xor i32 %80, %85
  %87 = load i32** %1, align 8
  %88 = getelementptr inbounds i32* %87, i64 2
  %89 = load i32* %88
  %90 = xor i32 %86, %89
  store i32 %90, i32* %s2, align 4
  %91 = load i8** %3, align 8
  %92 = getelementptr inbounds i8* %91, i64 12
  %93 = getelementptr inbounds i8* %92, i64 0
  %94 = load i8* %93
  %95 = zext i8 %94 to i32
  %96 = shl i32 %95, 24
  %97 = load i8** %3, align 8
  %98 = getelementptr inbounds i8* %97, i64 12
  %99 = getelementptr inbounds i8* %98, i64 1
  %100 = load i8* %99
  %101 = zext i8 %100 to i32
  %102 = shl i32 %101, 16
  %103 = xor i32 %96, %102
  %104 = load i8** %3, align 8
  %105 = getelementptr inbounds i8* %104, i64 12
  %106 = getelementptr inbounds i8* %105, i64 2
  %107 = load i8* %106
  %108 = zext i8 %107 to i32
  %109 = shl i32 %108, 8
  %110 = xor i32 %103, %109
  %111 = load i8** %3, align 8
  %112 = getelementptr inbounds i8* %111, i64 12
  %113 = getelementptr inbounds i8* %112, i64 3
  %114 = load i8* %113
  %115 = zext i8 %114 to i32
  %116 = xor i32 %110, %115
  %117 = load i32** %1, align 8
  %118 = getelementptr inbounds i32* %117, i64 3
  %119 = load i32* %118
  %120 = xor i32 %116, %119
  store i32 %120, i32* %s3, align 4
  %121 = load i32* %2, align 4
  %122 = ashr i32 %121, 1
  store i32 %122, i32* %r, align 4
  br label %123

; <label>:123                                     ; preds = %246, %0
  %124 = load i32* %s0, align 4
  %125 = lshr i32 %124, 24
  %126 = zext i32 %125 to i64
  %127 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %126
  %128 = load i32* %127
  %129 = load i32* %s3, align 4
  %130 = lshr i32 %129, 16
  %131 = and i32 %130, 255
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %132
  %134 = load i32* %133
  %135 = xor i32 %128, %134
  %136 = load i32* %s2, align 4
  %137 = lshr i32 %136, 8
  %138 = and i32 %137, 255
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %139
  %141 = load i32* %140
  %142 = xor i32 %135, %141
  %143 = load i32* %s1, align 4
  %144 = and i32 %143, 255
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %145
  %147 = load i32* %146
  %148 = xor i32 %142, %147
  %149 = load i32** %1, align 8
  %150 = getelementptr inbounds i32* %149, i64 4
  %151 = load i32* %150
  %152 = xor i32 %148, %151
  store i32 %152, i32* %t0, align 4
  %153 = load i32* %s1, align 4
  %154 = lshr i32 %153, 24
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %155
  %157 = load i32* %156
  %158 = load i32* %s0, align 4
  %159 = lshr i32 %158, 16
  %160 = and i32 %159, 255
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %161
  %163 = load i32* %162
  %164 = xor i32 %157, %163
  %165 = load i32* %s3, align 4
  %166 = lshr i32 %165, 8
  %167 = and i32 %166, 255
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %168
  %170 = load i32* %169
  %171 = xor i32 %164, %170
  %172 = load i32* %s2, align 4
  %173 = and i32 %172, 255
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %174
  %176 = load i32* %175
  %177 = xor i32 %171, %176
  %178 = load i32** %1, align 8
  %179 = getelementptr inbounds i32* %178, i64 5
  %180 = load i32* %179
  %181 = xor i32 %177, %180
  store i32 %181, i32* %t1, align 4
  %182 = load i32* %s2, align 4
  %183 = lshr i32 %182, 24
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %184
  %186 = load i32* %185
  %187 = load i32* %s1, align 4
  %188 = lshr i32 %187, 16
  %189 = and i32 %188, 255
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %190
  %192 = load i32* %191
  %193 = xor i32 %186, %192
  %194 = load i32* %s0, align 4
  %195 = lshr i32 %194, 8
  %196 = and i32 %195, 255
  %197 = zext i32 %196 to i64
  %198 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %197
  %199 = load i32* %198
  %200 = xor i32 %193, %199
  %201 = load i32* %s3, align 4
  %202 = and i32 %201, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %203
  %205 = load i32* %204
  %206 = xor i32 %200, %205
  %207 = load i32** %1, align 8
  %208 = getelementptr inbounds i32* %207, i64 6
  %209 = load i32* %208
  %210 = xor i32 %206, %209
  store i32 %210, i32* %t2, align 4
  %211 = load i32* %s3, align 4
  %212 = lshr i32 %211, 24
  %213 = zext i32 %212 to i64
  %214 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %213
  %215 = load i32* %214
  %216 = load i32* %s2, align 4
  %217 = lshr i32 %216, 16
  %218 = and i32 %217, 255
  %219 = zext i32 %218 to i64
  %220 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %219
  %221 = load i32* %220
  %222 = xor i32 %215, %221
  %223 = load i32* %s1, align 4
  %224 = lshr i32 %223, 8
  %225 = and i32 %224, 255
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %226
  %228 = load i32* %227
  %229 = xor i32 %222, %228
  %230 = load i32* %s0, align 4
  %231 = and i32 %230, 255
  %232 = zext i32 %231 to i64
  %233 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %232
  %234 = load i32* %233
  %235 = xor i32 %229, %234
  %236 = load i32** %1, align 8
  %237 = getelementptr inbounds i32* %236, i64 7
  %238 = load i32* %237
  %239 = xor i32 %235, %238
  store i32 %239, i32* %t3, align 4
  %240 = load i32** %1, align 8
  %241 = getelementptr inbounds i32* %240, i64 8
  store i32* %241, i32** %1, align 8
  %242 = load i32* %r, align 4
  %243 = add nsw i32 %242, -1
  store i32 %243, i32* %r, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

; <label>:245                                     ; preds = %123
  br label %363

; <label>:246                                     ; preds = %123
  %247 = load i32* %t0, align 4
  %248 = lshr i32 %247, 24
  %249 = zext i32 %248 to i64
  %250 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %249
  %251 = load i32* %250
  %252 = load i32* %t3, align 4
  %253 = lshr i32 %252, 16
  %254 = and i32 %253, 255
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %255
  %257 = load i32* %256
  %258 = xor i32 %251, %257
  %259 = load i32* %t2, align 4
  %260 = lshr i32 %259, 8
  %261 = and i32 %260, 255
  %262 = zext i32 %261 to i64
  %263 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %262
  %264 = load i32* %263
  %265 = xor i32 %258, %264
  %266 = load i32* %t1, align 4
  %267 = and i32 %266, 255
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %268
  %270 = load i32* %269
  %271 = xor i32 %265, %270
  %272 = load i32** %1, align 8
  %273 = getelementptr inbounds i32* %272, i64 0
  %274 = load i32* %273
  %275 = xor i32 %271, %274
  store i32 %275, i32* %s0, align 4
  %276 = load i32* %t1, align 4
  %277 = lshr i32 %276, 24
  %278 = zext i32 %277 to i64
  %279 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %278
  %280 = load i32* %279
  %281 = load i32* %t0, align 4
  %282 = lshr i32 %281, 16
  %283 = and i32 %282, 255
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %284
  %286 = load i32* %285
  %287 = xor i32 %280, %286
  %288 = load i32* %t3, align 4
  %289 = lshr i32 %288, 8
  %290 = and i32 %289, 255
  %291 = zext i32 %290 to i64
  %292 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %291
  %293 = load i32* %292
  %294 = xor i32 %287, %293
  %295 = load i32* %t2, align 4
  %296 = and i32 %295, 255
  %297 = zext i32 %296 to i64
  %298 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %297
  %299 = load i32* %298
  %300 = xor i32 %294, %299
  %301 = load i32** %1, align 8
  %302 = getelementptr inbounds i32* %301, i64 1
  %303 = load i32* %302
  %304 = xor i32 %300, %303
  store i32 %304, i32* %s1, align 4
  %305 = load i32* %t2, align 4
  %306 = lshr i32 %305, 24
  %307 = zext i32 %306 to i64
  %308 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %307
  %309 = load i32* %308
  %310 = load i32* %t1, align 4
  %311 = lshr i32 %310, 16
  %312 = and i32 %311, 255
  %313 = zext i32 %312 to i64
  %314 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %313
  %315 = load i32* %314
  %316 = xor i32 %309, %315
  %317 = load i32* %t0, align 4
  %318 = lshr i32 %317, 8
  %319 = and i32 %318, 255
  %320 = zext i32 %319 to i64
  %321 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %320
  %322 = load i32* %321
  %323 = xor i32 %316, %322
  %324 = load i32* %t3, align 4
  %325 = and i32 %324, 255
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %326
  %328 = load i32* %327
  %329 = xor i32 %323, %328
  %330 = load i32** %1, align 8
  %331 = getelementptr inbounds i32* %330, i64 2
  %332 = load i32* %331
  %333 = xor i32 %329, %332
  store i32 %333, i32* %s2, align 4
  %334 = load i32* %t3, align 4
  %335 = lshr i32 %334, 24
  %336 = zext i32 %335 to i64
  %337 = getelementptr inbounds [256 x i32]* @Td0, i32 0, i64 %336
  %338 = load i32* %337
  %339 = load i32* %t2, align 4
  %340 = lshr i32 %339, 16
  %341 = and i32 %340, 255
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds [256 x i32]* @Td1, i32 0, i64 %342
  %344 = load i32* %343
  %345 = xor i32 %338, %344
  %346 = load i32* %t1, align 4
  %347 = lshr i32 %346, 8
  %348 = and i32 %347, 255
  %349 = zext i32 %348 to i64
  %350 = getelementptr inbounds [256 x i32]* @Td2, i32 0, i64 %349
  %351 = load i32* %350
  %352 = xor i32 %345, %351
  %353 = load i32* %t0, align 4
  %354 = and i32 %353, 255
  %355 = zext i32 %354 to i64
  %356 = getelementptr inbounds [256 x i32]* @Td3, i32 0, i64 %355
  %357 = load i32* %356
  %358 = xor i32 %352, %357
  %359 = load i32** %1, align 8
  %360 = getelementptr inbounds i32* %359, i64 3
  %361 = load i32* %360
  %362 = xor i32 %358, %361
  store i32 %362, i32* %s3, align 4
  br label %123

; <label>:363                                     ; preds = %245
  %364 = load i32* %t0, align 4
  %365 = lshr i32 %364, 24
  %366 = zext i32 %365 to i64
  %367 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %366
  %368 = load i32* %367
  %369 = and i32 %368, -16777216
  %370 = load i32* %t3, align 4
  %371 = lshr i32 %370, 16
  %372 = and i32 %371, 255
  %373 = zext i32 %372 to i64
  %374 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %373
  %375 = load i32* %374
  %376 = and i32 %375, 16711680
  %377 = xor i32 %369, %376
  %378 = load i32* %t2, align 4
  %379 = lshr i32 %378, 8
  %380 = and i32 %379, 255
  %381 = zext i32 %380 to i64
  %382 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %381
  %383 = load i32* %382
  %384 = and i32 %383, 65280
  %385 = xor i32 %377, %384
  %386 = load i32* %t1, align 4
  %387 = and i32 %386, 255
  %388 = zext i32 %387 to i64
  %389 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %388
  %390 = load i32* %389
  %391 = and i32 %390, 255
  %392 = xor i32 %385, %391
  %393 = load i32** %1, align 8
  %394 = getelementptr inbounds i32* %393, i64 0
  %395 = load i32* %394
  %396 = xor i32 %392, %395
  store i32 %396, i32* %s0, align 4
  %397 = load i32* %s0, align 4
  %398 = lshr i32 %397, 24
  %399 = trunc i32 %398 to i8
  %400 = load i8** %4, align 8
  %401 = getelementptr inbounds i8* %400, i64 0
  store i8 %399, i8* %401
  %402 = load i32* %s0, align 4
  %403 = lshr i32 %402, 16
  %404 = trunc i32 %403 to i8
  %405 = load i8** %4, align 8
  %406 = getelementptr inbounds i8* %405, i64 1
  store i8 %404, i8* %406
  %407 = load i32* %s0, align 4
  %408 = lshr i32 %407, 8
  %409 = trunc i32 %408 to i8
  %410 = load i8** %4, align 8
  %411 = getelementptr inbounds i8* %410, i64 2
  store i8 %409, i8* %411
  %412 = load i32* %s0, align 4
  %413 = trunc i32 %412 to i8
  %414 = load i8** %4, align 8
  %415 = getelementptr inbounds i8* %414, i64 3
  store i8 %413, i8* %415
  %416 = load i32* %t1, align 4
  %417 = lshr i32 %416, 24
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %418
  %420 = load i32* %419
  %421 = and i32 %420, -16777216
  %422 = load i32* %t0, align 4
  %423 = lshr i32 %422, 16
  %424 = and i32 %423, 255
  %425 = zext i32 %424 to i64
  %426 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %425
  %427 = load i32* %426
  %428 = and i32 %427, 16711680
  %429 = xor i32 %421, %428
  %430 = load i32* %t3, align 4
  %431 = lshr i32 %430, 8
  %432 = and i32 %431, 255
  %433 = zext i32 %432 to i64
  %434 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %433
  %435 = load i32* %434
  %436 = and i32 %435, 65280
  %437 = xor i32 %429, %436
  %438 = load i32* %t2, align 4
  %439 = and i32 %438, 255
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %440
  %442 = load i32* %441
  %443 = and i32 %442, 255
  %444 = xor i32 %437, %443
  %445 = load i32** %1, align 8
  %446 = getelementptr inbounds i32* %445, i64 1
  %447 = load i32* %446
  %448 = xor i32 %444, %447
  store i32 %448, i32* %s1, align 4
  %449 = load i32* %s1, align 4
  %450 = lshr i32 %449, 24
  %451 = trunc i32 %450 to i8
  %452 = load i8** %4, align 8
  %453 = getelementptr inbounds i8* %452, i64 4
  %454 = getelementptr inbounds i8* %453, i64 0
  store i8 %451, i8* %454
  %455 = load i32* %s1, align 4
  %456 = lshr i32 %455, 16
  %457 = trunc i32 %456 to i8
  %458 = load i8** %4, align 8
  %459 = getelementptr inbounds i8* %458, i64 4
  %460 = getelementptr inbounds i8* %459, i64 1
  store i8 %457, i8* %460
  %461 = load i32* %s1, align 4
  %462 = lshr i32 %461, 8
  %463 = trunc i32 %462 to i8
  %464 = load i8** %4, align 8
  %465 = getelementptr inbounds i8* %464, i64 4
  %466 = getelementptr inbounds i8* %465, i64 2
  store i8 %463, i8* %466
  %467 = load i32* %s1, align 4
  %468 = trunc i32 %467 to i8
  %469 = load i8** %4, align 8
  %470 = getelementptr inbounds i8* %469, i64 4
  %471 = getelementptr inbounds i8* %470, i64 3
  store i8 %468, i8* %471
  %472 = load i32* %t2, align 4
  %473 = lshr i32 %472, 24
  %474 = zext i32 %473 to i64
  %475 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %474
  %476 = load i32* %475
  %477 = and i32 %476, -16777216
  %478 = load i32* %t1, align 4
  %479 = lshr i32 %478, 16
  %480 = and i32 %479, 255
  %481 = zext i32 %480 to i64
  %482 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %481
  %483 = load i32* %482
  %484 = and i32 %483, 16711680
  %485 = xor i32 %477, %484
  %486 = load i32* %t0, align 4
  %487 = lshr i32 %486, 8
  %488 = and i32 %487, 255
  %489 = zext i32 %488 to i64
  %490 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %489
  %491 = load i32* %490
  %492 = and i32 %491, 65280
  %493 = xor i32 %485, %492
  %494 = load i32* %t3, align 4
  %495 = and i32 %494, 255
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %496
  %498 = load i32* %497
  %499 = and i32 %498, 255
  %500 = xor i32 %493, %499
  %501 = load i32** %1, align 8
  %502 = getelementptr inbounds i32* %501, i64 2
  %503 = load i32* %502
  %504 = xor i32 %500, %503
  store i32 %504, i32* %s2, align 4
  %505 = load i32* %s2, align 4
  %506 = lshr i32 %505, 24
  %507 = trunc i32 %506 to i8
  %508 = load i8** %4, align 8
  %509 = getelementptr inbounds i8* %508, i64 8
  %510 = getelementptr inbounds i8* %509, i64 0
  store i8 %507, i8* %510
  %511 = load i32* %s2, align 4
  %512 = lshr i32 %511, 16
  %513 = trunc i32 %512 to i8
  %514 = load i8** %4, align 8
  %515 = getelementptr inbounds i8* %514, i64 8
  %516 = getelementptr inbounds i8* %515, i64 1
  store i8 %513, i8* %516
  %517 = load i32* %s2, align 4
  %518 = lshr i32 %517, 8
  %519 = trunc i32 %518 to i8
  %520 = load i8** %4, align 8
  %521 = getelementptr inbounds i8* %520, i64 8
  %522 = getelementptr inbounds i8* %521, i64 2
  store i8 %519, i8* %522
  %523 = load i32* %s2, align 4
  %524 = trunc i32 %523 to i8
  %525 = load i8** %4, align 8
  %526 = getelementptr inbounds i8* %525, i64 8
  %527 = getelementptr inbounds i8* %526, i64 3
  store i8 %524, i8* %527
  %528 = load i32* %t3, align 4
  %529 = lshr i32 %528, 24
  %530 = zext i32 %529 to i64
  %531 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %530
  %532 = load i32* %531
  %533 = and i32 %532, -16777216
  %534 = load i32* %t2, align 4
  %535 = lshr i32 %534, 16
  %536 = and i32 %535, 255
  %537 = zext i32 %536 to i64
  %538 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %537
  %539 = load i32* %538
  %540 = and i32 %539, 16711680
  %541 = xor i32 %533, %540
  %542 = load i32* %t1, align 4
  %543 = lshr i32 %542, 8
  %544 = and i32 %543, 255
  %545 = zext i32 %544 to i64
  %546 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %545
  %547 = load i32* %546
  %548 = and i32 %547, 65280
  %549 = xor i32 %541, %548
  %550 = load i32* %t0, align 4
  %551 = and i32 %550, 255
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds [256 x i32]* @Td4, i32 0, i64 %552
  %554 = load i32* %553
  %555 = and i32 %554, 255
  %556 = xor i32 %549, %555
  %557 = load i32** %1, align 8
  %558 = getelementptr inbounds i32* %557, i64 3
  %559 = load i32* %558
  %560 = xor i32 %556, %559
  store i32 %560, i32* %s3, align 4
  %561 = load i32* %s3, align 4
  %562 = lshr i32 %561, 24
  %563 = trunc i32 %562 to i8
  %564 = load i8** %4, align 8
  %565 = getelementptr inbounds i8* %564, i64 12
  %566 = getelementptr inbounds i8* %565, i64 0
  store i8 %563, i8* %566
  %567 = load i32* %s3, align 4
  %568 = lshr i32 %567, 16
  %569 = trunc i32 %568 to i8
  %570 = load i8** %4, align 8
  %571 = getelementptr inbounds i8* %570, i64 12
  %572 = getelementptr inbounds i8* %571, i64 1
  store i8 %569, i8* %572
  %573 = load i32* %s3, align 4
  %574 = lshr i32 %573, 8
  %575 = trunc i32 %574 to i8
  %576 = load i8** %4, align 8
  %577 = getelementptr inbounds i8* %576, i64 12
  %578 = getelementptr inbounds i8* %577, i64 2
  store i8 %575, i8* %578
  %579 = load i32* %s3, align 4
  %580 = trunc i32 %579 to i8
  %581 = load i8** %4, align 8
  %582 = getelementptr inbounds i8* %581, i64 12
  %583 = getelementptr inbounds i8* %582, i64 3
  store i8 %580, i8* %583
  ret void
}

define i32 @main(i32 %argc, i8** %argv) nounwind ssp {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8**, align 8
  store i32 0, i32* %1
  store i32 %argc, i32* %2, align 4
  store i8** %argv, i8*** %3, align 8
  call void @do_test(i32 128, i8* getelementptr inbounds ([17 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str2, i32 0, i32 0), i32 1, i32 2)
  call void @do_test(i32 192, i8* getelementptr inbounds ([25 x i8]* @.str3, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str4, i32 0, i32 0), i32 3, i32 4)
  call void @do_test(i32 256, i8* getelementptr inbounds ([33 x i8]* @.str5, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str1, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8]* @.str6, i32 0, i32 0), i32 5, i32 6)
  call void @do_bench(i32 102400)
  ret i32 0
}

define internal void @do_test(i32 %keybits, i8* %key, i8* %plain, i8* %cipher, i32 %testno1, i32 %testno2) nounwind ssp {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %ckey = alloca [60 x i32], align 16
  %temp = alloca [16 x i8], align 16
  %nr = alloca i32, align 4
  %ok = alloca i32, align 4
  store i32 %keybits, i32* %1, align 4
  store i8* %key, i8** %2, align 8
  store i8* %plain, i8** %3, align 8
  store i8* %cipher, i8** %4, align 8
  store i32 %testno1, i32* %5, align 4
  store i32 %testno2, i32* %6, align 4
  %7 = getelementptr inbounds [60 x i32]* %ckey, i32 0, i32 0
  %8 = load i8** %2, align 8
  %9 = load i32* %1, align 4
  %10 = call i32 @rijndaelKeySetupEnc(i32* %7, i8* %8, i32 %9)
  store i32 %10, i32* %nr, align 4
  %11 = getelementptr inbounds [60 x i32]* %ckey, i32 0, i32 0
  %12 = load i32* %nr, align 4
  %13 = load i8** %3, align 8
  %14 = getelementptr inbounds [16 x i8]* %temp, i32 0, i32 0
  call void @rijndaelEncrypt(i32* %11, i32 %12, i8* %13, i8* %14)
  %15 = getelementptr inbounds [16 x i8]* %temp, i32 0, i32 0
  %16 = load i8** %4, align 8
  %17 = call i32 @memcmp(i8* %15, i8* %16, i64 16)
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i32
  store i32 %19, i32* %ok, align 4
  %20 = load i32* %5, align 4
  %21 = load i32* %ok, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %24

; <label>:23                                      ; preds = %0
  br label %25

; <label>:24                                      ; preds = %0
  br label %25

; <label>:25                                      ; preds = %24, %23
  %26 = phi i8* [ getelementptr inbounds ([7 x i8]* @.str8, i32 0, i32 0), %23 ], [ getelementptr inbounds ([7 x i8]* @.str9, i32 0, i32 0), %24 ]
  %27 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str7, i32 0, i32 0), i32 %20, i8* %26)
  %28 = getelementptr inbounds [60 x i32]* %ckey, i32 0, i32 0
  %29 = load i8** %2, align 8
  %30 = load i32* %1, align 4
  %31 = call i32 @rijndaelKeySetupDec(i32* %28, i8* %29, i32 %30)
  store i32 %31, i32* %nr, align 4
  %32 = getelementptr inbounds [60 x i32]* %ckey, i32 0, i32 0
  %33 = load i32* %nr, align 4
  %34 = load i8** %4, align 8
  %35 = getelementptr inbounds [16 x i8]* %temp, i32 0, i32 0
  call void @rijndaelDecrypt(i32* %32, i32 %33, i8* %34, i8* %35)
  %36 = getelementptr inbounds [16 x i8]* %temp, i32 0, i32 0
  %37 = load i8** %3, align 8
  %38 = call i32 @memcmp(i8* %36, i8* %37, i64 16)
  %39 = icmp eq i32 %38, 0
  %40 = zext i1 %39 to i32
  store i32 %40, i32* %ok, align 4
  %41 = load i32* %6, align 4
  %42 = load i32* %ok, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %45

; <label>:44                                      ; preds = %25
  br label %46

; <label>:45                                      ; preds = %25
  br label %46

; <label>:46                                      ; preds = %45, %44
  %47 = phi i8* [ getelementptr inbounds ([7 x i8]* @.str8, i32 0, i32 0), %44 ], [ getelementptr inbounds ([7 x i8]* @.str9, i32 0, i32 0), %45 ]
  %48 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([23 x i8]* @.str10, i32 0, i32 0), i32 %41, i8* %47)
  ret void
}

define internal void @do_bench(i32 %nblocks) nounwind ssp {
  %1 = alloca i32, align 4
  %ckey = alloca [60 x i32], align 16
  %temp = alloca [16 x i8], align 16
  %nr = alloca i32, align 4
  store i32 %nblocks, i32* %1, align 4
  %2 = getelementptr inbounds [60 x i32]* %ckey, i32 0, i32 0
  %3 = call i32 @rijndaelKeySetupEnc(i32* %2, i8* getelementptr inbounds ([17 x i8]* @.str, i32 0, i32 0), i32 128)
  store i32 %3, i32* %nr, align 4
  br label %4

; <label>:4                                       ; preds = %12, %0
  %5 = load i32* %1, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

; <label>:7                                       ; preds = %4
  %8 = getelementptr inbounds [60 x i32]* %ckey, i32 0, i32 0
  %9 = load i32* %nr, align 4
  %10 = getelementptr inbounds [16 x i8]* %temp, i32 0, i32 0
  %11 = getelementptr inbounds [16 x i8]* %temp, i32 0, i32 0
  call void @rijndaelEncrypt(i32* %8, i32 %9, i8* %10, i8* %11)
  br label %12

; <label>:12                                      ; preds = %7
  %13 = load i32* %1, align 4
  %14 = add nsw i32 %13, -1
  store i32 %14, i32* %1, align 4
  br label %4

; <label>:15                                      ; preds = %4
  ret void
}

declare i32 @memcmp(i8*, i8*, i64)

declare i32 @printf(i8*, ...)
